{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Load user from localStorage on startup\nuseEffect(()=>{const loadUser=()=>{try{const token=localStorage.getItem('token');const userData=JSON.parse(localStorage.getItem('user'));if(token&&userData){setIsAuthenticated(true);setUser(userData);}}catch(error){console.error('Error loading auth state from localStorage:',error);}finally{setLoading(false);}};loadUser();},[]);// Login function\nconst login=async(username,password)=>{setLoading(true);setError(null);try{// In real app, this would call the API\nconst response=await fetch('/api/admin/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,password})});const data=await response.json();if(!response.ok){throw new Error(data.message||'Login failed');}if(data.success&&data.token){localStorage.setItem('token',data.token);localStorage.setItem('user',JSON.stringify(data.user));setIsAuthenticated(true);setUser(data.user);return true;}else{throw new Error(data.message||'Login failed');}}catch(error){setError(error.message);return false;}finally{setLoading(false);}};// Logout function\nconst logout=()=>{localStorage.removeItem('token');localStorage.removeItem('user');setIsAuthenticated(false);setUser(null);};// Get auth token\nconst getToken=()=>{return localStorage.getItem('token');};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isAuthenticated,user,loading,error,login,logout,getToken},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","jsx","_jsx","AuthContext","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","error","setError","loadUser","token","localStorage","getItem","userData","JSON","parse","console","login","username","password","response","fetch","method","headers","body","stringify","data","json","ok","Error","message","success","setItem","logout","removeItem","getToken","Provider","value"],"sources":["C:/Users/user/Desktop/moiveflix/movieflix/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Load user from localStorage on startup\r\n  useEffect(() => {\r\n    const loadUser = () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const userData = JSON.parse(localStorage.getItem('user'));\r\n        \r\n        if (token && userData) {\r\n          setIsAuthenticated(true);\r\n          setUser(userData);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading auth state from localStorage:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadUser();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (username, password) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // In real app, this would call the API\r\n      const response = await fetch('/api/admin/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ username, password })\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(data.message || 'Login failed');\r\n      }\r\n      \r\n      if (data.success && data.token) {\r\n        localStorage.setItem('token', data.token);\r\n        localStorage.setItem('user', JSON.stringify(data.user));\r\n        \r\n        setIsAuthenticated(true);\r\n        setUser(data.user);\r\n        return true;\r\n      } else {\r\n        throw new Error(data.message || 'Login failed');\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n  };\r\n\r\n  // Get auth token\r\n  const getToken = () => {\r\n    return localStorage.getItem('token');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        user,\r\n        loading,\r\n        error,\r\n        login,\r\n        logout,\r\n        getToken\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}