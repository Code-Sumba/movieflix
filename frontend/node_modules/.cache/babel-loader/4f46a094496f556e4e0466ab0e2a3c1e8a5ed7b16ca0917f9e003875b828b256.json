{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useLocation}from'react-router-dom';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const Search=()=>{const[results,setResults]=useState([]);const[loading,setLoading]=useState(true);const location=useLocation();const searchQuery=new URLSearchParams(location.search).get('q')||'';useEffect(()=>{const fetchSearchResults=async()=>{setLoading(true);try{// In a real app, this would be an API call\n// const response = await fetch(`/api/search?q=${searchQuery}`);\n// const data = await response.json();\n// Placeholder data\nconst placeholderResults=[{id:1,title:'Sample Movie 1',year:2023,poster:'/placeholder.jpg'},{id:2,title:'Sample Movie 2',year:2022,poster:'/placeholder.jpg'},{id:3,title:'Sample Movie 3',year:2021,poster:'/placeholder.jpg'}];setTimeout(()=>{setResults(placeholderResults);setLoading(false);},500);}catch(error){console.error('Error fetching search results:',error);setLoading(false);}};if(searchQuery){fetchSearchResults();}else{setResults([]);setLoading(false);}},[searchQuery]);if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-5\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Searching for \\\"\",searchQuery,\"\\\"...\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-5\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Search Results for \\\"\",searchQuery,\"\\\"\"]}),results.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No results found. Try another search term.\"}):/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:results.map(movie=>/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4 mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"img\",{src:movie.poster,className:\"card-img-top\",alt:movie.title,onError:e=>{e.target.src='/placeholder.jpg';}}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"card-title\",children:movie.title}),/*#__PURE__*/_jsx(\"p\",{className:\"card-text\",children:movie.year})]})]})},movie.id))})]});};export default Search;","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxs","_jsxs","jsx","_jsx","Search","results","setResults","loading","setLoading","location","searchQuery","URLSearchParams","search","get","fetchSearchResults","placeholderResults","id","title","year","poster","setTimeout","error","console","className","children","role","length","map","movie","src","alt","onError","e","target"],"sources":["C:/Users/user/Desktop/moiveflix/movieflix/frontend/src/pages/Search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst Search = () => {\r\n  const [results, setResults] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const location = useLocation();\r\n  const searchQuery = new URLSearchParams(location.search).get('q') || '';\r\n\r\n  useEffect(() => {\r\n    const fetchSearchResults = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // In a real app, this would be an API call\r\n        // const response = await fetch(`/api/search?q=${searchQuery}`);\r\n        // const data = await response.json();\r\n        \r\n        // Placeholder data\r\n        const placeholderResults = [\r\n          { id: 1, title: 'Sample Movie 1', year: 2023, poster: '/placeholder.jpg' },\r\n          { id: 2, title: 'Sample Movie 2', year: 2022, poster: '/placeholder.jpg' },\r\n          { id: 3, title: 'Sample Movie 3', year: 2021, poster: '/placeholder.jpg' },\r\n        ];\r\n        \r\n        setTimeout(() => {\r\n          setResults(placeholderResults);\r\n          setLoading(false);\r\n        }, 500);\r\n      } catch (error) {\r\n        console.error('Error fetching search results:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (searchQuery) {\r\n      fetchSearchResults();\r\n    } else {\r\n      setResults([]);\r\n      setLoading(false);\r\n    }\r\n  }, [searchQuery]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container mt-5\">\r\n        <h2>Searching for \"{searchQuery}\"...</h2>\r\n        <div className=\"spinner-border\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>Search Results for \"{searchQuery}\"</h2>\r\n      {results.length === 0 ? (\r\n        <p>No results found. Try another search term.</p>\r\n      ) : (\r\n        <div className=\"row\">\r\n          {results.map((movie) => (\r\n            <div key={movie.id} className=\"col-md-4 mb-4\">\r\n              <div className=\"card\">\r\n                <img \r\n                  src={movie.poster} \r\n                  className=\"card-img-top\" \r\n                  alt={movie.title}\r\n                  onError={(e) => {\r\n                    e.target.src = '/placeholder.jpg';\r\n                  }}\r\n                />\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{movie.title}</h5>\r\n                  <p className=\"card-text\">{movie.year}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}