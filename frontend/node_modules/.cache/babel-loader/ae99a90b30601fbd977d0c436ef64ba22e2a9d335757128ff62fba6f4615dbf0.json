{"ast":null,"code":"import React,{useContext}from'react';import{Navigate,useLocation}from'react-router-dom';import{AuthContext}from'../context/AuthContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children}=_ref;const{isAuthenticated,loading}=useContext(AuthContext);const location=useLocation();if(loading){// Show loading indicator while checking auth status\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center min-h-screen\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"inline-block w-8 h-8 border-4 border-blue-600 border-t-transparent rounded-full custom-loader\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2 text-gray-600\",children:\"Loading...\"})]})});}if(!isAuthenticated){// Redirect to login page with current location for redirect after login\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/login\",state:{from:location},replace:true});}// If authenticated, render the protected component\nreturn children;};export default ProtectedRoute;","map":{"version":3,"names":["React","useContext","Navigate","useLocation","AuthContext","jsx","_jsx","jsxs","_jsxs","ProtectedRoute","_ref","children","isAuthenticated","loading","location","className","to","state","from","replace"],"sources":["C:/Users/user/Desktop/moiveflix/movieflix/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const { isAuthenticated, loading } = useContext(AuthContext);\r\n  const location = useLocation();\r\n\r\n  if (loading) {\r\n    // Show loading indicator while checking auth status\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"text-center\">\r\n          <div className=\"inline-block w-8 h-8 border-4 border-blue-600 border-t-transparent rounded-full custom-loader\"></div>\r\n          <p className=\"mt-2 text-gray-600\">Loading...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    // Redirect to login page with current location for redirect after login\r\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\r\n  }\r\n\r\n  // If authenticated, render the protected component\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,OAASC,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CACxD,OAASC,WAAW,KAAQ,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErD,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAClC,KAAM,CAAEE,eAAe,CAAEC,OAAQ,CAAC,CAAGZ,UAAU,CAACG,WAAW,CAAC,CAC5D,KAAM,CAAAU,QAAQ,CAAGX,WAAW,CAAC,CAAC,CAE9B,GAAIU,OAAO,CAAE,CACX;AACA,mBACEP,IAAA,QAAKS,SAAS,CAAC,+CAA+C,CAAAJ,QAAA,cAC5DH,KAAA,QAAKO,SAAS,CAAC,aAAa,CAAAJ,QAAA,eAC1BL,IAAA,QAAKS,SAAS,CAAC,+FAA+F,CAAM,CAAC,cACrHT,IAAA,MAAGS,SAAS,CAAC,oBAAoB,CAAAJ,QAAA,CAAC,YAAU,CAAG,CAAC,EAC7C,CAAC,CACH,CAAC,CAEV,CAEA,GAAI,CAACC,eAAe,CAAE,CACpB;AACA,mBAAON,IAAA,CAACJ,QAAQ,EAACc,EAAE,CAAC,QAAQ,CAACC,KAAK,CAAE,CAAEC,IAAI,CAAEJ,QAAS,CAAE,CAACK,OAAO,MAAE,CAAC,CACpE,CAEA;AACA,MAAO,CAAAR,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}