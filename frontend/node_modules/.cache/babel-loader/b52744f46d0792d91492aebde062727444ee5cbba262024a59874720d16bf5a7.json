{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AdminLogs=()=>{const[logs,setLogs]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[filter,setFilter]=useState('all');// all, movie, user, error\nuseEffect(()=>{const fetchLogs=async()=>{setLoading(true);try{// In a real app, this would be an API call\n// const response = await fetch(`/api/admin/logs?filter=${filter}`);\n// const data = await response.json();\n// Simulate API delay\nawait new Promise(resolve=>setTimeout(resolve,800));// Mock logs data\nconst mockLogs=[{id:1,type:'movie_added',message:'Movie \"The Shawshank Redemption\" was added',timestamp:'2023-10-25T14:32:10Z',user:'admin@example.com'},{id:2,type:'movie_updated',message:'Movie \"The Godfather\" was updated',timestamp:'2023-10-24T09:15:22Z',user:'admin@example.com'},{id:3,type:'movie_deleted',message:'Movie \"Pulp Fiction\" was deleted',timestamp:'2023-10-23T18:05:47Z',user:'admin@example.com'},{id:4,type:'user_registered',message:'New user registered: johndoe@example.com',timestamp:'2023-10-22T11:42:33Z',user:'system'},{id:5,type:'login_success',message:'User logged in successfully',timestamp:'2023-10-22T10:15:18Z',user:'johndoe@example.com'},{id:6,type:'login_error',message:'Failed login attempt',timestamp:'2023-10-21T22:45:11Z',user:'unknown'},{id:7,type:'system_error',message:'Database connection error',timestamp:'2023-10-21T16:32:45Z',user:'system'},{id:8,type:'movie_added',message:'Movie \"Inception\" was added',timestamp:'2023-10-21T14:18:05Z',user:'admin@example.com'},{id:9,type:'system_backup',message:'System backup completed successfully',timestamp:'2023-10-20T03:00:00Z',user:'system'},{id:10,type:'user_updated',message:'User profile updated',timestamp:'2023-10-19T09:22:17Z',user:'johndoe@example.com'}];// Apply filtering\nconst filteredLogs=filter==='all'?mockLogs:mockLogs.filter(log=>{if(filter==='movie')return log.type.includes('movie');if(filter==='user')return log.type.includes('user')||log.type.includes('login');if(filter==='error')return log.type.includes('error');return true;});setLogs(filteredLogs);setLoading(false);}catch(error){console.error('Error fetching logs:',error);setError('Failed to load activity logs. Please try again later.');setLoading(false);}};fetchLogs();},[filter]);const formatDate=dateString=>{const date=new Date(dateString);return date.toLocaleDateString('en-US',{year:'numeric',month:'short',day:'numeric',hour:'2-digit',minute:'2-digit'});};const getTypeLabel=type=>{if(type.includes('movie_added'))return'Added';if(type.includes('movie_updated'))return'Updated';if(type.includes('movie_deleted'))return'Deleted';if(type.includes('user_registered'))return'User Registered';if(type.includes('login_success'))return'Login Success';if(type.includes('login_error'))return'Login Failed';if(type.includes('system_error'))return'System Error';if(type.includes('system_backup'))return'System Backup';if(type.includes('user_updated'))return'User Updated';return'Activity';};const getTypeBadgeColor=type=>{if(type.includes('added'))return'bg-green-100 text-green-800 border-green-200';if(type.includes('updated'))return'bg-blue-100 text-blue-800 border-blue-200';if(type.includes('deleted'))return'bg-red-100 text-red-800 border-red-200';if(type.includes('error'))return'bg-red-100 text-red-800 border-red-200';if(type.includes('login_success'))return'bg-green-100 text-green-800 border-green-200';if(type.includes('system'))return'bg-purple-100 text-purple-800 border-purple-200';if(type.includes('user'))return'bg-yellow-100 text-yellow-800 border-yellow-200';return'bg-gray-100 text-gray-800 border-gray-200';};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold mb-6\",children:\"Activity Logs\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"animate-pulse\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"h-10 bg-gray-200 rounded mb-6\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:[1,2,3,4,5].map(i=>/*#__PURE__*/_jsx(\"div\",{className:\"h-20 bg-gray-200 rounded\"},i))})]})]});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold mb-6\",children:\"Activity Logs\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\",children:error})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold mb-6\",children:\"Activity Logs\"}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setFilter('all'),className:`px-3 py-1 rounded border ${filter==='all'?'bg-gray-800 text-white border-gray-800':'bg-white text-gray-800 border-gray-300 hover:bg-gray-100'}`,children:\"All Logs\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setFilter('movie'),className:`px-3 py-1 rounded border ${filter==='movie'?'bg-gray-800 text-white border-gray-800':'bg-white text-gray-800 border-gray-300 hover:bg-gray-100'}`,children:\"Movie Logs\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setFilter('user'),className:`px-3 py-1 rounded border ${filter==='user'?'bg-gray-800 text-white border-gray-800':'bg-white text-gray-800 border-gray-300 hover:bg-gray-100'}`,children:\"User Logs\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setFilter('error'),className:`px-3 py-1 rounded border ${filter==='error'?'bg-gray-800 text-white border-gray-800':'bg-white text-gray-800 border-gray-300 hover:bg-gray-100'}`,children:\"Error Logs\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-lg shadow overflow-hidden\",children:/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full divide-y divide-gray-200\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Type\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Message\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"User\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",children:\"Timestamp\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white divide-y divide-gray-200\",children:logs.length===0?/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"4\",className:\"px-6 py-4 text-center text-gray-500\",children:\"No logs found\"})}):logs.map(log=>/*#__PURE__*/_jsxs(\"tr\",{className:\"hover:bg-gray-50\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap\",children:/*#__PURE__*/_jsx(\"span\",{className:`px-2 py-1 text-xs rounded-full border ${getTypeBadgeColor(log.type)}`,children:getTypeLabel(log.type)})}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-900\",children:log.message})}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-500\",children:log.user})}),/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",children:formatDate(log.timestamp)})]},log.id))})]})})})]});};export default AdminLogs;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","AdminLogs","logs","setLogs","loading","setLoading","error","setError","filter","setFilter","fetchLogs","Promise","resolve","setTimeout","mockLogs","id","type","message","timestamp","user","filteredLogs","log","includes","console","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","hour","minute","getTypeLabel","getTypeBadgeColor","className","children","map","i","onClick","length","colSpan"],"sources":["C:/Users/user/Desktop/moiveflix/movieflix/frontend/src/admin/AdminLogs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AdminLogs = () => {\r\n  const [logs, setLogs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [filter, setFilter] = useState('all'); // all, movie, user, error\r\n\r\n  useEffect(() => {\r\n    const fetchLogs = async () => {\r\n      setLoading(true);\r\n      \r\n      try {\r\n        // In a real app, this would be an API call\r\n        // const response = await fetch(`/api/admin/logs?filter=${filter}`);\r\n        // const data = await response.json();\r\n        \r\n        // Simulate API delay\r\n        await new Promise(resolve => setTimeout(resolve, 800));\r\n        \r\n        // Mock logs data\r\n        const mockLogs = [\r\n          { id: 1, type: 'movie_added', message: 'Movie \"The Shawshank Redemption\" was added', timestamp: '2023-10-25T14:32:10Z', user: 'admin@example.com' },\r\n          { id: 2, type: 'movie_updated', message: 'Movie \"The Godfather\" was updated', timestamp: '2023-10-24T09:15:22Z', user: 'admin@example.com' },\r\n          { id: 3, type: 'movie_deleted', message: 'Movie \"Pulp Fiction\" was deleted', timestamp: '2023-10-23T18:05:47Z', user: 'admin@example.com' },\r\n          { id: 4, type: 'user_registered', message: 'New user registered: johndoe@example.com', timestamp: '2023-10-22T11:42:33Z', user: 'system' },\r\n          { id: 5, type: 'login_success', message: 'User logged in successfully', timestamp: '2023-10-22T10:15:18Z', user: 'johndoe@example.com' },\r\n          { id: 6, type: 'login_error', message: 'Failed login attempt', timestamp: '2023-10-21T22:45:11Z', user: 'unknown' },\r\n          { id: 7, type: 'system_error', message: 'Database connection error', timestamp: '2023-10-21T16:32:45Z', user: 'system' },\r\n          { id: 8, type: 'movie_added', message: 'Movie \"Inception\" was added', timestamp: '2023-10-21T14:18:05Z', user: 'admin@example.com' },\r\n          { id: 9, type: 'system_backup', message: 'System backup completed successfully', timestamp: '2023-10-20T03:00:00Z', user: 'system' },\r\n          { id: 10, type: 'user_updated', message: 'User profile updated', timestamp: '2023-10-19T09:22:17Z', user: 'johndoe@example.com' },\r\n        ];\r\n        \r\n        // Apply filtering\r\n        const filteredLogs = filter === 'all' \r\n          ? mockLogs \r\n          : mockLogs.filter(log => {\r\n              if (filter === 'movie') return log.type.includes('movie');\r\n              if (filter === 'user') return log.type.includes('user') || log.type.includes('login');\r\n              if (filter === 'error') return log.type.includes('error');\r\n              return true;\r\n            });\r\n        \r\n        setLogs(filteredLogs);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching logs:', error);\r\n        setError('Failed to load activity logs. Please try again later.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchLogs();\r\n  }, [filter]);\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const getTypeLabel = (type) => {\r\n    if (type.includes('movie_added')) return 'Added';\r\n    if (type.includes('movie_updated')) return 'Updated';\r\n    if (type.includes('movie_deleted')) return 'Deleted';\r\n    if (type.includes('user_registered')) return 'User Registered';\r\n    if (type.includes('login_success')) return 'Login Success';\r\n    if (type.includes('login_error')) return 'Login Failed';\r\n    if (type.includes('system_error')) return 'System Error';\r\n    if (type.includes('system_backup')) return 'System Backup';\r\n    if (type.includes('user_updated')) return 'User Updated';\r\n    return 'Activity';\r\n  };\r\n\r\n  const getTypeBadgeColor = (type) => {\r\n    if (type.includes('added')) return 'bg-green-100 text-green-800 border-green-200';\r\n    if (type.includes('updated')) return 'bg-blue-100 text-blue-800 border-blue-200';\r\n    if (type.includes('deleted')) return 'bg-red-100 text-red-800 border-red-200';\r\n    if (type.includes('error')) return 'bg-red-100 text-red-800 border-red-200';\r\n    if (type.includes('login_success')) return 'bg-green-100 text-green-800 border-green-200';\r\n    if (type.includes('system')) return 'bg-purple-100 text-purple-800 border-purple-200';\r\n    if (type.includes('user')) return 'bg-yellow-100 text-yellow-800 border-yellow-200';\r\n    return 'bg-gray-100 text-gray-800 border-gray-200';\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"p-4\">\r\n        <h1 className=\"text-2xl font-bold mb-6\">Activity Logs</h1>\r\n        <div className=\"animate-pulse\">\r\n          <div className=\"h-10 bg-gray-200 rounded mb-6\"></div>\r\n          <div className=\"space-y-4\">\r\n            {[1, 2, 3, 4, 5].map(i => (\r\n              <div key={i} className=\"h-20 bg-gray-200 rounded\"></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"p-4\">\r\n        <h1 className=\"text-2xl font-bold mb-6\">Activity Logs</h1>\r\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\r\n          {error}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Activity Logs</h1>\r\n      \r\n      <div className=\"mb-6\">\r\n        <div className=\"flex flex-wrap gap-2\">\r\n          <button\r\n            onClick={() => setFilter('all')}\r\n            className={`px-3 py-1 rounded border ${\r\n              filter === 'all' \r\n                ? 'bg-gray-800 text-white border-gray-800' \r\n                : 'bg-white text-gray-800 border-gray-300 hover:bg-gray-100'\r\n            }`}\r\n          >\r\n            All Logs\r\n          </button>\r\n          <button\r\n            onClick={() => setFilter('movie')}\r\n            className={`px-3 py-1 rounded border ${\r\n              filter === 'movie' \r\n                ? 'bg-gray-800 text-white border-gray-800' \r\n                : 'bg-white text-gray-800 border-gray-300 hover:bg-gray-100'\r\n            }`}\r\n          >\r\n            Movie Logs\r\n          </button>\r\n          <button\r\n            onClick={() => setFilter('user')}\r\n            className={`px-3 py-1 rounded border ${\r\n              filter === 'user' \r\n                ? 'bg-gray-800 text-white border-gray-800' \r\n                : 'bg-white text-gray-800 border-gray-300 hover:bg-gray-100'\r\n            }`}\r\n          >\r\n            User Logs\r\n          </button>\r\n          <button\r\n            onClick={() => setFilter('error')}\r\n            className={`px-3 py-1 rounded border ${\r\n              filter === 'error' \r\n                ? 'bg-gray-800 text-white border-gray-800' \r\n                : 'bg-white text-gray-800 border-gray-300 hover:bg-gray-100'\r\n            }`}\r\n          >\r\n            Error Logs\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"bg-white rounded-lg shadow overflow-hidden\">\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Type</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Message</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">User</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Timestamp</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {logs.length === 0 ? (\r\n                <tr>\r\n                  <td colSpan=\"4\" className=\"px-6 py-4 text-center text-gray-500\">\r\n                    No logs found\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                logs.map((log) => (\r\n                  <tr key={log.id} className=\"hover:bg-gray-50\">\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className={`px-2 py-1 text-xs rounded-full border ${getTypeBadgeColor(log.type)}`}>\r\n                        {getTypeLabel(log.type)}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4\">\r\n                      <div className=\"text-sm text-gray-900\">{log.message}</div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"text-sm text-gray-500\">{log.user}</div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                      {formatDate(log.timestamp)}\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLogs; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}