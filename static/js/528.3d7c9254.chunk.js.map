{"version":3,"file":"static/js/528.3d7c9254.chunk.js","mappings":"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","sources":["components/HeroCarousel.js","components/MovieCard.js","pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FiChevronLeft, FiChevronRight, FiPlay, FiDownload, FiInfo, FiStar } from 'react-icons/fi';\r\n\r\nconst HeroCarousel = ({ featuredMovies = [] }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [isAutoPlaying, setIsAutoPlaying] = useState(true);\r\n  \r\n  // Auto-advance slides every 5 seconds\r\n  useEffect(() => {\r\n    let interval;\r\n    \r\n    if (isAutoPlaying && featuredMovies.length > 0) {\r\n      interval = setInterval(() => {\r\n        setCurrentIndex((prevIndex) => \r\n          prevIndex === featuredMovies.length - 1 ? 0 : prevIndex + 1\r\n        );\r\n      }, 5000);\r\n    }\r\n    \r\n    return () => {\r\n      if (interval) clearInterval(interval);\r\n    };\r\n  }, [isAutoPlaying, featuredMovies.length]);\r\n  \r\n  // Pause auto-play when user interacts with carousel\r\n  const handleManualChange = (index) => {\r\n    setCurrentIndex(index);\r\n    setIsAutoPlaying(false);\r\n    \r\n    // Resume auto-play after 10 seconds of inactivity\r\n    setTimeout(() => {\r\n      setIsAutoPlaying(true);\r\n    }, 10000);\r\n  };\r\n  \r\n  const goToPrevious = () => {\r\n    const newIndex = currentIndex === 0 \r\n      ? featuredMovies.length - 1 \r\n      : currentIndex - 1;\r\n    handleManualChange(newIndex);\r\n  };\r\n  \r\n  const goToNext = () => {\r\n    const newIndex = currentIndex === featuredMovies.length - 1 \r\n      ? 0 \r\n      : currentIndex + 1;\r\n    handleManualChange(newIndex);\r\n  };\r\n  \r\n  // If no featured movies are available, show placeholder\r\n  if (!featuredMovies || featuredMovies.length === 0) {\r\n    return (\r\n      <div className=\"relative bg-gray-900 h-[500px] flex items-center justify-center\">\r\n        <div className=\"text-center text-white\">\r\n          <h2 className=\"text-3xl font-bold mb-4\">Featured Movies Coming Soon</h2>\r\n          <p className=\"text-gray-300\">Check back later for our featured selection</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  const currentMovie = featuredMovies[currentIndex];\r\n  \r\n  return (\r\n    <div className=\"relative h-[500px] md:h-[600px] lg:h-[700px] overflow-hidden\">\r\n      {/* Background image */}\r\n      <div className=\"absolute inset-0 w-full h-full\">\r\n        <img\r\n          src={currentMovie.backdrop || currentMovie.poster}\r\n          alt={currentMovie.title}\r\n          className=\"w-full h-full object-cover object-center\"\r\n        />\r\n        {/* Gradient overlay for better text visibility */}\r\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black via-black/50 to-transparent\" />\r\n      </div>\r\n      \r\n      {/* Content */}\r\n      <div className=\"relative h-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex flex-col justify-end pb-16\">\r\n        <div className=\"max-w-3xl mb-12\">\r\n          {/* Title */}\r\n          <h1 className=\"text-4xl md:text-5xl lg:text-6xl font-bold text-white mb-4\">\r\n            {currentMovie.title}\r\n          </h1>\r\n          \r\n          {/* Meta info */}\r\n          <div className=\"flex flex-wrap items-center space-x-4 mb-4 text-gray-300\">\r\n            {currentMovie.rating > 0 && (\r\n              <div className=\"flex items-center\">\r\n                <FiStar className=\"mr-1 text-yellow-400\" />\r\n                <span>{currentMovie.rating.toFixed(1)}</span>\r\n              </div>\r\n            )}\r\n            \r\n            <span>{new Date(currentMovie.releaseDate).getFullYear()}</span>\r\n            \r\n            {currentMovie.language && (\r\n              <span className=\"px-2 py-1 bg-primary-600/80 rounded text-white text-sm\">\r\n                {currentMovie.language}\r\n              </span>\r\n            )}\r\n            \r\n            {currentMovie.genres && currentMovie.genres.slice(0, 3).map(genre => (\r\n              <span key={genre} className=\"text-sm\">\r\n                {genre}\r\n              </span>\r\n            ))}\r\n          </div>\r\n          \r\n          {/* Description */}\r\n          <p className=\"text-white/80 text-lg mb-8 line-clamp-3\">\r\n            {currentMovie.description}\r\n          </p>\r\n          \r\n          {/* Action buttons */}\r\n          <div className=\"flex flex-wrap gap-4\">\r\n            {currentMovie.trailerUrl && (\r\n              <a\r\n                href={currentMovie.trailerUrl}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"btn btn-primary flex items-center\"\r\n              >\r\n                <FiPlay className=\"mr-2\" />\r\n                Watch Trailer\r\n              </a>\r\n            )}\r\n            \r\n            <Link\r\n              to={`/movie/${currentMovie.slug}`}\r\n              className=\"btn btn-secondary flex items-center\"\r\n            >\r\n              <FiInfo className=\"mr-2\" />\r\n              More Info\r\n            </Link>\r\n            \r\n            <Link\r\n              to={`/movie/${currentMovie.slug}#download`}\r\n              className=\"btn btn-primary flex items-center\"\r\n            >\r\n              <FiDownload className=\"mr-2\" />\r\n              Download\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Navigation arrows */}\r\n      <button \r\n        onClick={goToPrevious}\r\n        className=\"absolute left-4 top-1/2 transform -translate-y-1/2 p-2 rounded-full bg-black/30 text-white hover:bg-black/50 transition-colors\"\r\n        aria-label=\"Previous movie\"\r\n      >\r\n        <FiChevronLeft className=\"h-6 w-6\" />\r\n      </button>\r\n      \r\n      <button \r\n        onClick={goToNext}\r\n        className=\"absolute right-4 top-1/2 transform -translate-y-1/2 p-2 rounded-full bg-black/30 text-white hover:bg-black/50 transition-colors\"\r\n        aria-label=\"Next movie\"\r\n      >\r\n        <FiChevronRight className=\"h-6 w-6\" />\r\n      </button>\r\n      \r\n      {/* Indicators */}\r\n      <div className=\"absolute bottom-8 left-1/2 transform -translate-x-1/2 flex space-x-2\">\r\n        {featuredMovies.map((_, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleManualChange(index)}\r\n            className={`w-2.5 h-2.5 rounded-full transition-colors ${\r\n              index === currentIndex ? 'bg-white' : 'bg-white/50 hover:bg-white/80'\r\n            }`}\r\n            aria-label={`Go to slide ${index + 1}`}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroCarousel; ","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FiStar, FiClock, FiCalendar, FiVideo, FiPlay } from 'react-icons/fi';\r\n\r\nconst MovieCard = ({ movie }) => {\r\n  // Calculate a color based on the movie rating\r\n  const getRatingColor = (rating) => {\r\n    if (rating >= 8) return 'text-green-500';\r\n    if (rating >= 6) return 'text-yellow-500';\r\n    return 'text-red-500';\r\n  };\r\n\r\n  // Ensure we have the movie object\r\n  if (!movie) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Link \r\n      to={`/movie/${movie.slug}`}\r\n      className=\"card group bg-white dark:bg-gray-800 rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1 flex flex-col h-full\"\r\n    >\r\n      <div className=\"relative overflow-hidden aspect-[2/3]\">\r\n        {/* Movie poster with fallback */}\r\n        <div className=\"absolute inset-0 bg-gray-200 dark:bg-gray-700 animate-pulse\"></div>\r\n        <img \r\n          src={movie.poster || '/images/placeholder.svg'} \r\n          alt={movie.title}\r\n          className=\"w-full h-full object-cover transition-transform duration-500 group-hover:scale-110 relative z-10\"\r\n          loading=\"lazy\"\r\n          onError={(e) => {\r\n            e.target.onerror = null;\r\n            e.target.src = '/images/placeholder.svg';\r\n          }}\r\n        />\r\n        \r\n        {/* Play button overlay on hover */}\r\n        <div className=\"absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center z-20\">\r\n          <div className=\"bg-red-600 rounded-full p-3 transform scale-75 group-hover:scale-100 transition-transform duration-300\">\r\n            <FiPlay className=\"text-white text-2xl\" />\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Ribbon for featured/trending movies */}\r\n        {movie.isFeatured && (\r\n          <div className=\"absolute top-0 left-0 w-28 h-28 overflow-hidden z-20\">\r\n            <div className=\"absolute top-0 left-0 transform -translate-y-1/2 -translate-x-1/2 rotate-45 w-40 text-center bg-yellow-500 text-black font-semibold py-1 shadow-md\">\r\n              Featured\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {movie.isTrending && (\r\n          <div className=\"absolute top-2 right-2 bg-gradient-to-r from-red-600 to-pink-600 text-white text-xs font-bold px-2 py-1 rounded-full z-20 animate-pulse\">\r\n            Trending\r\n          </div>\r\n        )}\r\n        \r\n        {/* Quality tag */}\r\n        {movie.quality && (\r\n          <div className=\"absolute bottom-2 left-2 bg-blue-600 text-white text-xs font-medium px-2 py-1 rounded z-20\">\r\n            {movie.quality}\r\n          </div>\r\n        )}\r\n        \r\n        {/* IMDb rating */}\r\n        {movie.rating > 0 && (\r\n          <div className=\"absolute bottom-2 right-2 bg-black/80 text-white text-xs font-bold px-2 py-1 rounded flex items-center z-20\">\r\n            <FiStar className={`mr-1 ${getRatingColor(movie.rating)}`} />\r\n            <span>{movie.rating.toFixed(1)}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {/* Card info */}\r\n      <div className=\"p-4 flex flex-col flex-grow\">\r\n        <h3 className=\"font-bold text-gray-900 dark:text-white text-lg line-clamp-1 group-hover:text-red-600 dark:group-hover:text-red-400 transition-colors duration-200\">\r\n          {movie.title}\r\n        </h3>\r\n        \r\n        <div className=\"mt-2 flex flex-wrap gap-1.5 mb-2\">\r\n          {movie.genres && movie.genres.slice(0, 3).map((genre) => (\r\n            <span \r\n              key={genre} \r\n              className=\"text-xs px-2 py-0.5 bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-full\"\r\n            >\r\n              {genre}\r\n            </span>\r\n          ))}\r\n        </div>\r\n        \r\n        <div className=\"flex items-center justify-between mt-auto pt-2 text-xs text-gray-600 dark:text-gray-400 border-t border-gray-100 dark:border-gray-700\">\r\n          <div className=\"flex items-center\">\r\n            <FiCalendar className=\"mr-1\" />\r\n            <span>{new Date(movie.releaseDate).getFullYear()}</span>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center\">\r\n            {movie.isSeries ? (\r\n              <div className=\"flex items-center text-blue-600 dark:text-blue-400\">\r\n                <FiVideo className=\"mr-1\" />\r\n                <span>Series</span>\r\n              </div>\r\n            ) : (\r\n              <div className=\"flex items-center\">\r\n                <FiClock className=\"mr-1\" />\r\n                <span>{movie.duration || 'N/A'}</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default MovieCard; ","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n// Components\r\nimport HeroCarousel from '../components/HeroCarousel';\r\nimport MovieCard from '../components/MovieCard';\r\nimport { FiChevronRight, FiLoader } from 'react-icons/fi';\r\n\r\nconst Home = () => {\r\n  // State for different movie sections\r\n  const [featuredMovies, setFeaturedMovies] = useState([]);\r\n  const [trendingMovies, setTrendingMovies] = useState([]);\r\n  const [latestMovies, setLatestMovies] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchHomeData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // Create API endpoint URLs\r\n        const API_BASE_URL = 'http://localhost:5000/api';\r\n        const featuredUrl = `${API_BASE_URL}/movies/featured`;\r\n        const trendingUrl = `${API_BASE_URL}/movies/trending`;\r\n        const latestUrl = `${API_BASE_URL}/movies/latest`;\r\n        const categoriesUrl = `${API_BASE_URL}/movies/categories`;\r\n        \r\n        // Fetch all data in parallel\r\n        const [featuredRes, trendingRes, latestRes, categoriesRes] = await Promise.all([\r\n          axios.get(featuredUrl),\r\n          axios.get(trendingUrl),\r\n          axios.get(latestUrl),\r\n          axios.get(categoriesUrl)\r\n        ]);\r\n        \r\n        // Update state with fetched data\r\n        if (featuredRes.data.success) setFeaturedMovies(featuredRes.data.movies);\r\n        if (trendingRes.data.success) setTrendingMovies(trendingRes.data.movies);\r\n        if (latestRes.data.success) setLatestMovies(latestRes.data.movies);\r\n        if (categoriesRes.data.success) {\r\n          setCategories(categoriesRes.data.categories);\r\n        }\r\n        \r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching home data:', err);\r\n        setError('Failed to load movies. Please try again later.');\r\n        setLoading(false);\r\n        \r\n        // Set sample data for demonstration if API fails\r\n        setSampleData();\r\n      }\r\n    };\r\n    \r\n    fetchHomeData();\r\n  }, []);\r\n  \r\n  // Fallback sample data for demonstration\r\n  const setSampleData = () => {\r\n    // Sample featured movies\r\n    setFeaturedMovies([\r\n      {\r\n        title: 'The Dark Knight',\r\n        slug: 'the-dark-knight',\r\n        description: 'When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, Batman must accept one of the greatest psychological and physical tests of his ability to fight injustice.',\r\n        poster: 'https://via.placeholder.com/300x450?text=Dark+Knight',\r\n        backdrop: 'https://via.placeholder.com/1920x1080?text=Dark+Knight+Backdrop',\r\n        releaseDate: '2008-07-18',\r\n        rating: 9.0,\r\n        genres: ['Action', 'Crime', 'Drama'],\r\n        language: 'English'\r\n      },\r\n      {\r\n        title: 'Inception',\r\n        slug: 'inception',\r\n        description: 'A thief who steals corporate secrets through the use of dream-sharing technology is given the inverse task of planting an idea into the mind of a C.E.O.',\r\n        poster: 'https://via.placeholder.com/300x450?text=Inception',\r\n        backdrop: 'https://via.placeholder.com/1920x1080?text=Inception+Backdrop',\r\n        releaseDate: '2010-07-16',\r\n        rating: 8.8,\r\n        genres: ['Action', 'Adventure', 'Sci-Fi'],\r\n        language: 'English'\r\n      }\r\n    ]);\r\n    \r\n    // Sample trending movies\r\n    setTrendingMovies([\r\n      {\r\n        title: 'Dune',\r\n        slug: 'dune',\r\n        poster: 'https://via.placeholder.com/300x450?text=Dune',\r\n        releaseDate: '2021-10-22',\r\n        rating: 8.1,\r\n        genres: ['Action', 'Adventure', 'Drama'],\r\n        language: 'English'\r\n      },\r\n      {\r\n        title: 'No Time to Die',\r\n        slug: 'no-time-to-die',\r\n        poster: 'https://via.placeholder.com/300x450?text=No+Time+To+Die',\r\n        releaseDate: '2021-10-08',\r\n        rating: 7.4,\r\n        genres: ['Action', 'Adventure', 'Thriller'],\r\n        language: 'English'\r\n      },\r\n      {\r\n        title: 'Shang-Chi',\r\n        slug: 'shang-chi',\r\n        poster: 'https://via.placeholder.com/300x450?text=Shang+Chi',\r\n        releaseDate: '2021-09-03',\r\n        rating: 7.5,\r\n        genres: ['Action', 'Adventure', 'Fantasy'],\r\n        language: 'English'\r\n      },\r\n      {\r\n        title: 'The French Dispatch',\r\n        slug: 'the-french-dispatch',\r\n        poster: 'https://via.placeholder.com/300x450?text=French+Dispatch',\r\n        releaseDate: '2021-10-22',\r\n        rating: 7.3,\r\n        genres: ['Comedy', 'Drama', 'Romance'],\r\n        language: 'English'\r\n      }\r\n    ]);\r\n    \r\n    // Sample latest movies\r\n    setLatestMovies([\r\n      {\r\n        title: 'Eternals',\r\n        slug: 'eternals',\r\n        poster: 'https://via.placeholder.com/300x450?text=Eternals',\r\n        releaseDate: '2021-11-05',\r\n        rating: 6.8,\r\n        genres: ['Action', 'Adventure', 'Fantasy'],\r\n        language: 'English'\r\n      },\r\n      {\r\n        title: 'Venom: Let There Be Carnage',\r\n        slug: 'venom-let-there-be-carnage',\r\n        poster: 'https://via.placeholder.com/300x450?text=Venom',\r\n        releaseDate: '2021-10-01',\r\n        rating: 6.3,\r\n        genres: ['Action', 'Adventure', 'Sci-Fi'],\r\n        language: 'English'\r\n      },\r\n      {\r\n        title: 'Spencer',\r\n        slug: 'spencer',\r\n        poster: 'https://via.placeholder.com/300x450?text=Spencer',\r\n        releaseDate: '2021-11-05',\r\n        rating: 6.9,\r\n        genres: ['Biography', 'Drama'],\r\n        language: 'English'\r\n      },\r\n      {\r\n        title: 'Last Night in Soho',\r\n        slug: 'last-night-in-soho',\r\n        poster: 'https://via.placeholder.com/300x450?text=Soho',\r\n        releaseDate: '2021-10-29',\r\n        rating: 7.2,\r\n        genres: ['Drama', 'Horror', 'Mystery'],\r\n        language: 'English'\r\n      }\r\n    ]);\r\n    \r\n    // Sample categories\r\n    setCategories(['Hindi', 'English', 'South', 'Dubbed', 'Web Series']);\r\n  };\r\n  \r\n  // Loading state\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <FiLoader className=\"animate-spin h-8 w-8 text-primary-600\" />\r\n        <span className=\"ml-2 text-xl\">Loading amazing movies...</span>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // Error state\r\n  if (error && !featuredMovies.length && !trendingMovies.length && !latestMovies.length) {\r\n    return (\r\n      <div className=\"text-center py-20\">\r\n        <h2 className=\"text-2xl font-bold text-red-600 mb-4\">Oops! Something went wrong</h2>\r\n        <p className=\"mb-6\">{error}</p>\r\n        <button \r\n          onClick={() => window.location.reload()} \r\n          className=\"btn btn-primary\"\r\n        >\r\n          Try Again\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"pt-16\"> {/* pt-16 to account for fixed navbar */}\r\n      {/* Hero carousel */}\r\n      <HeroCarousel featuredMovies={featuredMovies} />\r\n      \r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n        {/* Trending Movies Section */}\r\n        <section className=\"mb-12\">\r\n          <div className=\"flex justify-between items-center mb-6\">\r\n            <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n              Trending Movies\r\n            </h2>\r\n            <Link to=\"/trending\" className=\"text-primary-600 dark:text-primary-400 flex items-center hover:underline\">\r\n              View All <FiChevronRight className=\"ml-1\" />\r\n            </Link>\r\n          </div>\r\n          \r\n          <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-4 md:gap-6\">\r\n            {trendingMovies.slice(0, 6).map((movie) => (\r\n              <MovieCard key={movie.slug} movie={movie} />\r\n            ))}\r\n          </div>\r\n        </section>\r\n        \r\n        {/* Latest Movies Section */}\r\n        <section className=\"mb-12\">\r\n          <div className=\"flex justify-between items-center mb-6\">\r\n            <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n              Latest Releases\r\n            </h2>\r\n            <Link to=\"/latest\" className=\"text-primary-600 dark:text-primary-400 flex items-center hover:underline\">\r\n              View All <FiChevronRight className=\"ml-1\" />\r\n            </Link>\r\n          </div>\r\n          \r\n          <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-4 md:gap-6\">\r\n            {latestMovies.slice(0, 6).map((movie) => (\r\n              <MovieCard key={movie.slug} movie={movie} />\r\n            ))}\r\n          </div>\r\n        </section>\r\n        \r\n        {/* Categories Section */}\r\n        <section>\r\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6\">\r\n            Browse by Category\r\n          </h2>\r\n          \r\n          <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4\">\r\n            {categories.map((category) => (\r\n              <Link \r\n                key={category}\r\n                to={`/category/${category}`}\r\n                className=\"bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 shadow-md rounded-lg p-6 text-center transition-colors hover:text-primary-600\"\r\n              >\r\n                <h3 className=\"font-medium text-lg\">{category}</h3>\r\n              </Link>\r\n            ))}\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home; "],"names":["_ref","featuredMovies","currentIndex","setCurrentIndex","useState","isAutoPlaying","setIsAutoPlaying","useEffect","interval","length","setInterval","prevIndex","clearInterval","handleManualChange","index","setTimeout","_jsx","className","children","_jsxs","currentMovie","src","backdrop","poster","alt","title","rating","FiStar","toFixed","Date","releaseDate","getFullYear","language","genres","slice","map","genre","description","trailerUrl","href","target","rel","FiPlay","Link","to","slug","FiInfo","FiDownload","onClick","goToPrevious","newIndex","FiChevronLeft","goToNext","FiChevronRight","_","movie","loading","onError","e","onerror","isFeatured","isTrending","quality","FiCalendar","isSeries","FiVideo","FiClock","duration","Home","setFeaturedMovies","trendingMovies","setTrendingMovies","latestMovies","setLatestMovies","categories","setCategories","setLoading","error","setError","async","API_BASE_URL","featuredUrl","trendingUrl","latestUrl","categoriesUrl","featuredRes","trendingRes","latestRes","categoriesRes","Promise","all","axios","get","data","success","movies","err","console","setSampleData","fetchHomeData","FiLoader","HeroCarousel","MovieCard","category","window","location","reload"],"sourceRoot":""}