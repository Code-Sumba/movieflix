{"version":3,"file":"static/js/528.310c58ba.chunk.js","mappings":"mNAIA,MAoMA,EApMqBA,IAA8B,IAA7B,eAAEC,EAAiB,IAAID,EAC3C,MAAOE,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,IAC1CC,EAAeC,IAAoBF,EAAAA,EAAAA,WAAS,IAGnDG,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAUJ,OARIH,GAAiBJ,EAAeQ,OAAS,IAC3CD,EAAWE,aAAY,KACrBP,GAAiBQ,GACfA,IAAcV,EAAeQ,OAAS,EAAI,EAAIE,EAAY,GAC3D,GACA,MAGE,KACDH,GAAUI,cAAcJ,EAAS,CACtC,GACA,CAACH,EAAeJ,EAAeQ,SAGlC,MAAMI,EAAsBC,IAC1BX,EAAgBW,GAChBR,GAAiB,GAGjBS,YAAW,KACTT,GAAiB,EAAK,GACrB,IAAM,EAkBX,IAAKL,GAA4C,IAA1BA,EAAeQ,OACpC,OACEO,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kEAAiEC,UAC9EC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,0BAAyBC,SAAC,iCACxCF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBAAeC,SAAC,qDAMrC,MAAME,EAAenB,EAAeC,GAWpC,OACEiB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+DAA8DC,SAAA,EAE3EC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iCAAgCC,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,OACEK,IAAKD,EAAaE,UAAYF,EAAaG,OAC3CC,IAAKJ,EAAaK,MAClBR,UAAU,8CAGZD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iFAIjBD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6EAA4EC,SAAC,cAK5FF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yFAAwFC,UACrGC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAE7BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+BAA8BC,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wDAAuDC,SAClEE,EAAaK,QAEfL,EAAaM,UACZV,EAAAA,EAAAA,KAAA,QAAMC,WAnCOS,EAmCuBN,EAAaM,QAlCtDA,EACW,OAAZA,GAAgC,QAAZA,EAA0B,gBAClC,UAAZA,GAAmC,QAAZA,EAA0B,cACrC,SAAZA,GAAkC,OAAZA,EAAyB,eAC5C,cAJc,eAkCM,oEAA4GR,SAC1HE,EAAaM,cAMpBP,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uDAAsDC,SAAA,CAClEE,EAAaO,OAAS,IACrBR,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kDAAiDC,SAAA,EAC9DF,EAAAA,EAAAA,KAACY,EAAAA,IAAM,CAACX,UAAU,0BAClBD,EAAAA,EAAAA,KAAA,QAAAE,SAAOE,EAAaO,OAAOE,QAAQ,SAIvCV,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kDAAiDC,SAAA,EAC9DF,EAAAA,EAAAA,KAACc,EAAAA,IAAU,CAACb,UAAU,yBACtBD,EAAAA,EAAAA,KAAA,QAAAE,SAAO,IAAIa,KAAKX,EAAaY,aAAaC,mBAG3Cb,EAAac,WACZf,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kDAAiDC,SAAA,EAC9DF,EAAAA,EAAAA,KAACmB,EAAAA,IAAO,CAAClB,UAAU,yBACnBD,EAAAA,EAAAA,KAAA,QAAAE,SAAOE,EAAac,kBAM1BlB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6DAA4DC,SACtEE,EAAagB,eAIhBjB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uBAAsBC,SAAA,CAClCE,EAAaiB,aACZlB,EAAAA,EAAAA,MAAA,KACEmB,KAAMlB,EAAaiB,WACnBE,OAAO,SACPC,IAAI,sBACJvB,UAAU,kHAAiHC,SAAA,EAE3HF,EAAAA,EAAAA,KAACyB,EAAAA,IAAM,CAACxB,UAAU,wBAAwB,oBAK9CE,EAAAA,EAAAA,MAACuB,EAAAA,GAAI,CACHC,GAAI,UAAUvB,EAAawB,OAC3B3B,UAAU,yIAAwIC,SAAA,EAElJF,EAAAA,EAAAA,KAAC6B,EAAAA,IAAM,CAAC5B,UAAU,SAAS,oBAI7BE,EAAAA,EAAAA,MAACuB,EAAAA,GAAI,CACHC,GAAI,UAAUvB,EAAawB,gBAC3B3B,UAAU,oHAAmHC,SAAA,EAE7HF,EAAAA,EAAAA,KAAC8B,EAAAA,IAAU,CAAC7B,UAAU,SAAS,2BAQvCD,EAAAA,EAAAA,KAAA,UACE+B,QApIeC,KACnB,MAAMC,EAA4B,IAAjB/C,EACbD,EAAeQ,OAAS,EACxBP,EAAe,EACnBW,EAAmBoC,EAAS,EAiIxBhC,UAAU,kIACV,aAAW,iBAAgBC,UAE3BF,EAAAA,EAAAA,KAACkC,EAAAA,IAAa,CAACjC,UAAU,eAG3BD,EAAAA,EAAAA,KAAA,UACE+B,QArIWI,KACf,MAAMF,EAAW/C,IAAiBD,EAAeQ,OAAS,EACtD,EACAP,EAAe,EACnBW,EAAmBoC,EAAS,EAkIxBhC,UAAU,mIACV,aAAW,aAAYC,UAEvBF,EAAAA,EAAAA,KAACoC,EAAAA,IAAc,CAACnC,UAAU,eAI5BD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uEAAsEC,SAClFjB,EAAeoD,KAAI,CAACC,EAAGxC,KACtBE,EAAAA,EAAAA,KAAA,UAEE+B,QAASA,IAAMlC,EAAmBC,GAClCG,UAAW,2CACTH,IAAUZ,EAAe,eAAiB,iCAE5C,aAAY,eAAeY,EAAQ,KAL9BA,UA1HUY,KAmIjB,EC1EV,EAtHkB1B,IAAgB,IAAf,MAAEuD,GAAOvD,EAiB1B,OAAKuD,GAKHpC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wIAAuIC,SAAA,EACpJC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wCAAuCC,SAAA,EAEpDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iEACfD,EAAAA,EAAAA,KAAC0B,EAAAA,GAAI,CAACC,GAAI,UAAUY,EAAMX,OAAO1B,UAC/BF,EAAAA,EAAAA,KAAA,OACEK,IAAKkC,EAAMhC,QAAU,0BACrBC,IAAK+B,EAAM9B,MACXR,UAAU,mGACVuC,QAAQ,OACRC,QAAUC,IACRA,EAAEnB,OAAOoB,QAAU,KACnBD,EAAEnB,OAAOlB,IAAM,yBAAyB,OAM9CF,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oJAAmJC,SAAA,EAChKF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wCAAuCC,SAAEqC,EAAM9B,SAE7DN,EAAAA,EAAAA,MAAA,OAAKF,UAAU,6BAA4BC,SAAA,EACzCC,EAAAA,EAAAA,MAACuB,EAAAA,GAAI,CACHC,GAAI,UAAUY,EAAMX,OACpB3B,UAAU,sIAAqIC,SAAA,EAE/IF,EAAAA,EAAAA,KAACyB,EAAAA,IAAM,CAACxB,UAAU,aAAa2C,KAAM,MACrC5C,EAAAA,EAAAA,KAAA,QAAAE,SAAM,qBAGRC,EAAAA,EAAAA,MAACuB,EAAAA,GAAI,CACHC,GAAI,UAAUY,EAAMX,gBACpB3B,UAAU,oIAAmIC,SAAA,EAE7IF,EAAAA,EAAAA,KAAC8B,EAAAA,IAAU,CAAC7B,UAAU,aAAa2C,KAAM,MACzC5C,EAAAA,EAAAA,KAAA,QAAAE,SAAM,0BAMXqC,EAAM7B,UACLV,EAAAA,EAAAA,KAAA,OAAKC,UAAW,yBAvDCS,EAuDwC6B,EAAM7B,QAtDrD,OAAZA,GAAgC,QAAZA,EAA0B,gBAClC,UAAZA,GAAmC,QAAZA,EAA0B,cACrC,SAAZA,GAAkC,OAAZA,EAAyB,eAC5C,sEAmD+HR,SAC7HqC,EAAM7B,UAKV6B,EAAMrB,WACLlB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6FAA4FC,SACxGqC,EAAMrB,WAKVqB,EAAM5B,OAAS,IACdR,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8GAA6GC,SAAA,EAC1HF,EAAAA,EAAAA,KAACY,EAAAA,IAAM,CAACX,UAAW,SA7ELU,EA6E4B4B,EAAM5B,OA5EpDA,GAAU,EAAU,iBACpBA,GAAU,EAAU,kBACjB,mBA2ECX,EAAAA,EAAAA,KAAA,QAAAE,SAAOqC,EAAM5B,OAAOE,QAAQ,YAMlCV,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CF,EAAAA,EAAAA,KAAC0B,EAAAA,GAAI,CAACC,GAAI,UAAUY,EAAMX,OAAQ3B,UAAU,QAAOC,UACjDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yHAAwHC,SACnIqC,EAAM9B,WAIXN,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wIAAuIC,SAAA,EACpJC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAACc,EAAAA,IAAU,CAACb,UAAU,UACtBD,EAAAA,EAAAA,KAAA,QAAAE,SAAO,IAAIa,KAAKwB,EAAMvB,aAAaC,oBAGrCjB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,SAC/BqC,EAAMM,UACL1C,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qDAAoDC,SAAA,EACjEF,EAAAA,EAAAA,KAAC8C,EAAAA,IAAO,CAAC7C,UAAU,UACnBD,EAAAA,EAAAA,KAAA,QAAAE,SAAM,eAGRC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAC+C,EAAAA,IAAO,CAAC9C,UAAU,UACnBD,EAAAA,EAAAA,KAAA,QAAAE,SAAOqC,EAAMS,UAAY,sBA1F9B,KAhBerC,MAOCD,CAyGjB,EC3GJuC,EAAmBjE,IAAgB,IAAf,MAAEuD,GAAOvD,EACjC,OAAKuD,GAGHvC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uFAAsFC,UACnGC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,UAChCF,EAAAA,EAAAA,KAAA,OACEK,IAAKkC,EAAMhC,QAAU,wDACrBC,IAAK+B,EAAM9B,MACXR,UAAU,gDAGdE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qDAAoDC,SAAA,EACjEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mEAAkEC,SAAC,aAGlFqC,EAAM7B,UACLV,EAAAA,EAAAA,KAAA,QAAMC,UAAW,+BAA+BsC,EAAM7B,QAAQwC,qBAAqBhD,SAChFqC,EAAM7B,cAIbV,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iDAAgDC,SAAEqC,EAAM9B,SACtEN,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uCAAsCC,SAAA,EACnDC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,yBAAwBC,SAAA,EACtCF,EAAAA,EAAAA,KAACY,EAAAA,IAAM,CAACX,UAAU,yBACjBsC,EAAM5B,QAAU,UAEnBX,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMC,SAAE,IAAIa,KAAKwB,EAAMvB,aAAaC,gBACnDsB,EAAMY,QAAUZ,EAAMY,OAAO1D,OAAS,IACrCO,EAAAA,EAAAA,KAAA,QAAAE,SAAOqC,EAAMY,OAAOC,MAAM,EAAG,GAAGC,KAAK,YAGzCrD,EAAAA,EAAAA,KAAA,KAAGC,UAAU,kCAAiCC,SAAEqC,EAAMnB,eACtDpB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAI,CACHC,GAAI,UAAUY,EAAMX,OACpB3B,UAAU,yBAAwBC,SACnC,yBAtCU,IA2CX,EAIJoD,EAAcA,KAClBtD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mEAAkEC,UAC/EC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yDAAwDC,SAAA,EACrEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SAAC,oCACnDF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,aAAYC,SAAC,mEAE5BC,EAAAA,EAAAA,MAACuB,EAAAA,GAAI,CACHC,GAAG,YACH1B,UAAU,mHAAkHC,SAAA,EAE5HF,EAAAA,EAAAA,KAAC8B,EAAAA,IAAU,CAAC7B,UAAU,SAAS,yBAMjCsD,EAAgBC,IAAA,IAAC,MAAE/C,EAAK,KAAEgD,EAAI,KAAEC,GAAMF,EAAA,OAC1CrD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,kDAAiDC,SAAA,CAC5DwD,GACD1D,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMC,SAAEO,OAEzBgD,IACCtD,EAAAA,EAAAA,MAACuB,EAAAA,GAAI,CAACC,GAAI8B,EAAMxD,UAAU,mDAAkDC,SAAA,CAAC,aAClEF,EAAAA,EAAAA,KAACoC,EAAAA,IAAc,CAACnC,UAAU,cAGnC,EAkWR,EA/Va0D,IAAmB,IAAlB,SAAEC,GAAUD,EAExB,MAAO1E,EAAgB4E,IAAqBzE,EAAAA,EAAAA,UAAS,KAC9C0E,EAAgBC,IAAqB3E,EAAAA,EAAAA,UAAS,KAC9C4E,EAAcC,IAAmB7E,EAAAA,EAAAA,UAAS,KAC1C8E,EAAYC,IAAiB/E,EAAAA,EAAAA,UAAS,KACtCoD,EAAS4B,IAAchF,EAAAA,EAAAA,WAAS,IAChCiF,EAAOC,IAAYlF,EAAAA,EAAAA,UAAS,OAC5BmF,EAAkBC,IAAuBpF,EAAAA,EAAAA,UAAS,OAuCzDG,EAAAA,EAAAA,YAAU,KACckF,WACpB,IACEL,GAAW,GAIX,MAAMM,EAAgBC,OAAOC,SAASC,SAASC,SAAS,aAClDC,EAAeL,EACjB,6CACA,4BAEEM,EAAc,GAAGD,oBACjBE,EAAc,GAAGF,oBACjBG,EAAY,GAAGH,kBACfI,EAAgB,GAAGJ,sBAGzB,GAAIL,EAIF,OAHAU,QAAQC,IAAI,8CACZC,SACAlB,GAAW,GAKb,MAAOmB,EAAaC,EAAaC,EAAWC,SAAuBC,QAAQC,IAAI,CAC7EC,EAAAA,EAAMC,IAAId,GACVa,EAAAA,EAAMC,IAAIb,GACVY,EAAAA,EAAMC,IAAIZ,GACVW,EAAAA,EAAMC,IAAIX,KAIRI,EAAYQ,KAAKC,SAASnC,EAAkB0B,EAAYQ,KAAKE,QAC7DT,EAAYO,KAAKC,SAASjC,EAAkByB,EAAYO,KAAKE,QAC7DR,EAAUM,KAAKC,SAAS/B,EAAgBwB,EAAUM,KAAKE,QACvDP,EAAcK,KAAKC,SACrB7B,EAAcuB,EAAcK,KAAK7B,YAGnCE,GAAW,EACb,CAAE,MAAO8B,GACPd,QAAQf,MAAM,4BAA6B6B,GAC3C5B,EAAS,kDACTF,GAAW,GAGXkB,GACF,GAGFa,EAAe,GACd,IAGH,MAAMb,EAAgBA,KAEpB,MAAMc,EAAW,CACf,CACE3F,MAAO,kBACPmB,KAAM,kBACNR,YAAa,gMACbb,OAAQ,uDACRD,SAAU,kEACVU,YAAa,aACbL,OAAQ,EACRwC,OAAQ,CAAC,SAAU,QAAS,SAC5BjC,SAAU,UACVR,QAAS,MAEX,CACED,MAAO,YACPmB,KAAM,YACNR,YAAa,2JACbb,OAAQ,qDACRD,SAAU,gEACVU,YAAa,aACbL,OAAQ,IACRwC,OAAQ,CAAC,SAAU,YAAa,UAChCjC,SAAU,UACVR,QAAS,UAIbmD,EAAkBuC,GAElB5B,EAAoB4B,EAAS,IAG7BrC,EAAkB,CAChB,CACEtD,MAAO,OACPmB,KAAM,OACNrB,OAAQ,gDACRS,YAAa,aACbL,OAAQ,IACRwC,OAAQ,CAAC,SAAU,YAAa,SAChCjC,SAAU,UACVR,QAAS,MAEX,CACED,MAAO,iBACPmB,KAAM,iBACNrB,OAAQ,0DACRS,YAAa,aACbL,OAAQ,IACRwC,OAAQ,CAAC,SAAU,YAAa,YAChCjC,SAAU,UACVR,QAAS,MAEX,CACED,MAAO,YACPmB,KAAM,YACNrB,OAAQ,qDACRS,YAAa,aACbL,OAAQ,IACRwC,OAAQ,CAAC,SAAU,YAAa,WAChCjC,SAAU,UACVR,QAAS,MAEX,CACED,MAAO,sBACPmB,KAAM,sBACNrB,OAAQ,2DACRS,YAAa,aACbL,OAAQ,IACRwC,OAAQ,CAAC,SAAU,QAAS,WAC5BjC,SAAU,UACVR,QAAS,SAEX,CACED,MAAO,WACPmB,KAAM,WACNrB,OAAQ,oDACRS,YAAa,aACbL,OAAQ,IACRwC,OAAQ,CAAC,SAAU,YAAa,WAChCjC,SAAU,UACVR,QAAS,MAEX,CACED,MAAO,8BACPmB,KAAM,6BACNrB,OAAQ,iDACRS,YAAa,aACbL,OAAQ,IACRwC,OAAQ,CAAC,SAAU,YAAa,UAChCjC,SAAU,UACVR,QAAS,UAKbuD,EAAgB,CACd,CACExD,MAAO,WACPmB,KAAM,WACNrB,OAAQ,oDACRS,YAAa,aACbL,OAAQ,IACRwC,OAAQ,CAAC,SAAU,YAAa,WAChCjC,SAAU,UACVR,QAAS,SAEX,CACED,MAAO,8BACPmB,KAAM,6BACNrB,OAAQ,iDACRS,YAAa,aACbL,OAAQ,IACRwC,OAAQ,CAAC,SAAU,YAAa,UAChCjC,SAAU,UACVR,QAAS,MAEX,CACED,MAAO,UACPmB,KAAM,UACNrB,OAAQ,mDACRS,YAAa,aACbL,OAAQ,IACRwC,OAAQ,CAAC,YAAa,SACtBjC,SAAU,UACVR,QAAS,QAEX,CACED,MAAO,qBACPmB,KAAM,qBACNrB,OAAQ,gDACRS,YAAa,aACbL,OAAQ,IACRwC,OAAQ,CAAC,QAAS,SAAU,WAC5BjC,SAAU,UACVR,QAAS,WAKbyD,EAAc,CAAC,YAAa,YAAa,eAAgB,aAAc,aAAc,WAAY,UAAW,gBAAgB,EAI9H,OAAI3B,GAEArC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gDAA+CC,SAAA,EAC5DF,EAAAA,EAAAA,KAACqG,EAAAA,IAAQ,CAACpG,UAAU,yCACpBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAC,kCAMjCmE,GAAUpF,EAAeQ,QAAWqE,EAAerE,QAAWuE,EAAavE,QAgB7EU,EAAAA,EAAAA,MAAA,OAAKF,UAAW,UAAS2D,EAAW,cAAgB,eAAgB1D,SAAA,CAAC,KAEnEF,EAAAA,EAAAA,KAACsG,EAAY,CAACrH,eAAgBA,KAE9BkB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8CAA6CC,SAAA,CAEzDqE,IACCpE,EAAAA,EAAAA,MAAA,WAASF,UAAU,OAAMC,SAAA,EACvBF,EAAAA,EAAAA,KAACuD,EAAa,CACZ9C,MAAM,qBACNiD,MAAM1D,EAAAA,EAAAA,KAACuG,EAAAA,IAAO,CAACtG,UAAU,iBAAiB2C,KAAM,QAElD5C,EAAAA,EAAAA,KAACiD,EAAgB,CAACV,MAAOgC,QAK7BvE,EAAAA,EAAAA,KAACsD,EAAW,KAGZnD,EAAAA,EAAAA,MAAA,WAASF,UAAU,QAAOC,SAAA,EACxBF,EAAAA,EAAAA,KAACuD,EAAa,CACZ9C,MAAM,kBACNgD,KAAK,YACLC,MAAM1D,EAAAA,EAAAA,KAACwG,EAAAA,IAAY,CAACvG,UAAU,iBAAiB2C,KAAM,QAGvD5C,EAAAA,EAAAA,KAACyG,EAAAA,EAAM,CAlSbC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,UAAU,EACVC,cAAe,IACfC,WAAY,CACV,CACEC,WAAY,KACZC,SAAU,CACRN,aAAc,IAGlB,CACEK,WAAY,KACZC,SAAU,CACRN,aAAc,IAGlB,CACEK,WAAY,IACZC,SAAU,CACRN,aAAc,IAGlB,CACEK,WAAY,IACZC,SAAU,CACRN,aAAc,KAqQY3G,SACvB4D,EAAezB,KAAKE,IACnBvC,EAAAA,EAAAA,KAAA,OAAsBC,UAAU,OAAMC,UACpCF,EAAAA,EAAAA,KAACoH,EAAS,CAAC7E,MAAOA,KADVA,EAAMX,cAQtBzB,EAAAA,EAAAA,MAAA,WAASF,UAAU,QAAOC,SAAA,EACxBF,EAAAA,EAAAA,KAACuD,EAAa,CACZ9C,MAAM,kBACNgD,KAAK,UACLC,MAAM1D,EAAAA,EAAAA,KAAC+C,EAAAA,IAAO,CAAC9C,UAAU,iBAAiB2C,KAAM,QAGlD5C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8FAA6FC,SACzG8D,EAAaZ,MAAM,EAAG,IAAIf,KAAKE,IAC9BvC,EAAAA,EAAAA,KAACoH,EAAS,CAAkB7E,MAAOA,GAAnBA,EAAMX,cAM5BzB,EAAAA,EAAAA,MAAA,WAAAD,SAAA,EACEF,EAAAA,EAAAA,KAACuD,EAAa,CACZ9C,MAAM,qBACNiD,MAAM1D,EAAAA,EAAAA,KAACqH,EAAAA,IAAM,CAACpH,UAAU,iBAAiB2C,KAAM,QAGjD5C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sEAAqEC,SACjFgE,EAAW7B,KAAKiF,IACfnH,EAAAA,EAAAA,MAACuB,EAAAA,GAAI,CAEHC,GAAI,aAAa2F,EAASpE,cAAcqE,QAAQ,OAAQ,OACxDtH,UAAU,iLAAgLC,SAAA,EAE1LF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sBAAqBC,SAAEoH,KACrCtH,EAAAA,EAAAA,KAACwH,EAAAA,IAAY,CAAC5E,KAAM,OALf0E,iBA3EfnH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,uCAAsCC,SAAC,gCACrDF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,OAAMC,SAAEmE,KACrBrE,EAAAA,EAAAA,KAAA,UACE+B,QAASA,IAAM4C,OAAOC,SAAS6C,SAC/BxH,UAAU,6EAA4EC,SACvF,gBAgFC,C","sources":["components/HeroCarousel.js","components/MovieCard.js","pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FiChevronLeft, FiChevronRight, FiPlay, FiDownload, FiInfo, FiStar, FiCalendar, FiGlobe } from 'react-icons/fi';\r\n\r\nconst HeroCarousel = ({ featuredMovies = [] }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [isAutoPlaying, setIsAutoPlaying] = useState(true);\r\n  \r\n  // Auto-advance slides every 5 seconds\r\n  useEffect(() => {\r\n    let interval;\r\n    \r\n    if (isAutoPlaying && featuredMovies.length > 0) {\r\n      interval = setInterval(() => {\r\n        setCurrentIndex((prevIndex) => \r\n          prevIndex === featuredMovies.length - 1 ? 0 : prevIndex + 1\r\n        );\r\n      }, 5000);\r\n    }\r\n    \r\n    return () => {\r\n      if (interval) clearInterval(interval);\r\n    };\r\n  }, [isAutoPlaying, featuredMovies.length]);\r\n  \r\n  // Pause auto-play when user interacts with carousel\r\n  const handleManualChange = (index) => {\r\n    setCurrentIndex(index);\r\n    setIsAutoPlaying(false);\r\n    \r\n    // Resume auto-play after 10 seconds of inactivity\r\n    setTimeout(() => {\r\n      setIsAutoPlaying(true);\r\n    }, 10000);\r\n  };\r\n  \r\n  const goToPrevious = () => {\r\n    const newIndex = currentIndex === 0 \r\n      ? featuredMovies.length - 1 \r\n      : currentIndex - 1;\r\n    handleManualChange(newIndex);\r\n  };\r\n  \r\n  const goToNext = () => {\r\n    const newIndex = currentIndex === featuredMovies.length - 1 \r\n      ? 0 \r\n      : currentIndex + 1;\r\n    handleManualChange(newIndex);\r\n  };\r\n  \r\n  // If no featured movies are available, show placeholder\r\n  if (!featuredMovies || featuredMovies.length === 0) {\r\n    return (\r\n      <div className=\"relative bg-gray-900 h-[500px] flex items-center justify-center\">\r\n        <div className=\"text-center text-white\">\r\n          <h2 className=\"text-3xl font-bold mb-4\">Featured Movies Coming Soon</h2>\r\n          <p className=\"text-gray-300\">Check back later for our featured selection</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  const currentMovie = featuredMovies[currentIndex];\r\n  \r\n  // Get quality badge color\r\n  const getQualityColor = (quality) => {\r\n    if (!quality) return 'bg-gray-600';\r\n    if (quality === '4K' || quality === 'UHD') return 'bg-purple-600';\r\n    if (quality === '1080p' || quality === 'FHD') return 'bg-blue-600';\r\n    if (quality === '720p' || quality === 'HD') return 'bg-vegagreen';\r\n    return 'bg-gray-600';\r\n  };\r\n  \r\n  return (\r\n    <div className=\"relative h-[500px] md:h-[550px] lg:h-[650px] overflow-hidden\">\r\n      {/* Background image */}\r\n      <div className=\"absolute inset-0 w-full h-full\">\r\n        <img\r\n          src={currentMovie.backdrop || currentMovie.poster}\r\n          alt={currentMovie.title}\r\n          className=\"w-full h-full object-cover object-center\"\r\n        />\r\n        {/* Gradient overlay for better text visibility */}\r\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black via-black/70 to-transparent\" />\r\n      </div>\r\n      \r\n      {/* Featured badge */}\r\n      <div className=\"absolute top-0 left-0 bg-vegagreen text-white py-2 px-6 font-semibold z-10\">\r\n        FEATURED\r\n      </div>\r\n      \r\n      {/* Content */}\r\n      <div className=\"relative h-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex flex-col justify-end pb-16\">\r\n        <div className=\"max-w-3xl mb-8\">\r\n          {/* Title with quality badge */}\r\n          <div className=\"flex items-center gap-3 mb-4\">\r\n            <h1 className=\"text-3xl md:text-4xl lg:text-5xl font-bold text-white\">\r\n              {currentMovie.title}\r\n            </h1>\r\n            {currentMovie.quality && (\r\n              <span className={`${getQualityColor(currentMovie.quality)} text-white text-sm font-medium px-2 py-1 rounded uppercase h-fit`}>\r\n                {currentMovie.quality}\r\n              </span>\r\n            )}\r\n          </div>\r\n          \r\n          {/* Meta info */}\r\n          <div className=\"flex flex-wrap items-center gap-4 mb-4 text-gray-300\">\r\n            {currentMovie.rating > 0 && (\r\n              <div className=\"flex items-center bg-black/30 px-2 py-1 rounded\">\r\n                <FiStar className=\"mr-1 text-yellow-400\" />\r\n                <span>{currentMovie.rating.toFixed(1)}</span>\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"flex items-center bg-black/30 px-2 py-1 rounded\">\r\n              <FiCalendar className=\"mr-1 text-vegagreen\" />\r\n              <span>{new Date(currentMovie.releaseDate).getFullYear()}</span>\r\n            </div>\r\n            \r\n            {currentMovie.language && (\r\n              <div className=\"flex items-center bg-black/30 px-2 py-1 rounded\">\r\n                <FiGlobe className=\"mr-1 text-vegagreen\" />\r\n                <span>{currentMovie.language}</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          {/* Description */}\r\n          <p className=\"text-white/90 text-lg mb-8 line-clamp-3 md:line-clamp-none\">\r\n            {currentMovie.description}\r\n          </p>\r\n          \r\n          {/* Action buttons */}\r\n          <div className=\"flex flex-wrap gap-3\">\r\n            {currentMovie.trailerUrl && (\r\n              <a\r\n                href={currentMovie.trailerUrl}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"bg-white text-gray-900 px-6 py-3 rounded-md font-semibold flex items-center hover:bg-gray-100 transition-colors\"\r\n              >\r\n                <FiPlay className=\"mr-2 text-vegagreen\" />\r\n                Watch Trailer\r\n              </a>\r\n            )}\r\n            \r\n            <Link\r\n              to={`/movie/${currentMovie.slug}`}\r\n              className=\"bg-black/50 text-white px-6 py-3 rounded-md font-semibold flex items-center border border-white/20 hover:bg-black/70 transition-colors\"\r\n            >\r\n              <FiInfo className=\"mr-2\" />\r\n              Movie Details\r\n            </Link>\r\n            \r\n            <Link\r\n              to={`/movie/${currentMovie.slug}#download`}\r\n              className=\"bg-vegagreen text-white px-6 py-3 rounded-md font-semibold flex items-center hover:bg-green-700 transition-colors\"\r\n            >\r\n              <FiDownload className=\"mr-2\" />\r\n              Download Now\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Navigation arrows */}\r\n      <button \r\n        onClick={goToPrevious}\r\n        className=\"absolute left-4 top-1/2 transform -translate-y-1/2 p-3 rounded-full bg-black/60 text-white hover:bg-vegagreen transition-colors\"\r\n        aria-label=\"Previous movie\"\r\n      >\r\n        <FiChevronLeft className=\"h-6 w-6\" />\r\n      </button>\r\n      \r\n      <button \r\n        onClick={goToNext}\r\n        className=\"absolute right-4 top-1/2 transform -translate-y-1/2 p-3 rounded-full bg-black/60 text-white hover:bg-vegagreen transition-colors\"\r\n        aria-label=\"Next movie\"\r\n      >\r\n        <FiChevronRight className=\"h-6 w-6\" />\r\n      </button>\r\n      \r\n      {/* Indicators */}\r\n      <div className=\"absolute bottom-8 left-1/2 transform -translate-x-1/2 flex space-x-2\">\r\n        {featuredMovies.map((_, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleManualChange(index)}\r\n            className={`w-3 h-3 rounded-full transition-colors ${\r\n              index === currentIndex ? 'bg-vegagreen' : 'bg-white/50 hover:bg-white/80'\r\n            }`}\r\n            aria-label={`Go to slide ${index + 1}`}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroCarousel; ","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FiStar, FiClock, FiCalendar, FiVideo, FiPlay, FiDownload } from 'react-icons/fi';\r\n\r\nconst MovieCard = ({ movie }) => {\r\n  // Calculate a color based on the movie rating\r\n  const getRatingColor = (rating) => {\r\n    if (rating >= 8) return 'text-green-500';\r\n    if (rating >= 6) return 'text-yellow-500';\r\n    return 'text-red-500';\r\n  };\r\n\r\n  // Get quality badge color\r\n  const getQualityColor = (quality) => {\r\n    if (quality === '4K' || quality === 'UHD') return 'bg-purple-600';\r\n    if (quality === '1080p' || quality === 'FHD') return 'bg-blue-600';\r\n    if (quality === '720p' || quality === 'HD') return 'bg-vegagreen';\r\n    return 'bg-gray-600';\r\n  };\r\n\r\n  // Ensure we have the movie object\r\n  if (!movie) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"group bg-white dark:bg-gray-800 rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 flex flex-col h-full\">\r\n      <div className=\"relative overflow-hidden aspect-[2/3]\">\r\n        {/* Movie poster with fallback */}\r\n        <div className=\"absolute inset-0 bg-gray-200 dark:bg-gray-700 animate-pulse\"></div>\r\n        <Link to={`/movie/${movie.slug}`}>\r\n          <img \r\n            src={movie.poster || '/images/placeholder.svg'} \r\n            alt={movie.title}\r\n            className=\"w-full h-full object-cover transition-transform duration-500 group-hover:scale-110 relative z-10\"\r\n            loading=\"lazy\"\r\n            onError={(e) => {\r\n              e.target.onerror = null;\r\n              e.target.src = '/images/placeholder.svg';\r\n            }}\r\n          />\r\n        </Link>\r\n        \r\n        {/* Overlay on hover */}\r\n        <div className=\"absolute inset-0 bg-black/70 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex flex-col items-center justify-center z-20 p-4\">\r\n          <h3 className=\"text-white font-bold text-center mb-2\">{movie.title}</h3>\r\n          \r\n          <div className=\"flex flex-col gap-2 w-full\">\r\n            <Link \r\n              to={`/movie/${movie.slug}`}\r\n              className=\"bg-vegagreen text-white py-2 px-4 rounded flex items-center justify-center gap-1 hover:bg-green-700 transition duration-200 text-sm\"\r\n            >\r\n              <FiPlay className=\"text-white\" size={16} />\r\n              <span>View Details</span>\r\n            </Link>\r\n            \r\n            <Link \r\n              to={`/movie/${movie.slug}#download`}\r\n              className=\"bg-blue-600 text-white py-2 px-4 rounded flex items-center justify-center gap-1 hover:bg-blue-700 transition duration-200 text-sm\"\r\n            >\r\n              <FiDownload className=\"text-white\" size={16} />\r\n              <span>Download Now</span>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Quality tag */}\r\n        {movie.quality && (\r\n          <div className={`absolute top-2 left-2 ${getQualityColor(movie.quality)} text-white text-xs font-medium px-2 py-1 rounded z-20`}>\r\n            {movie.quality}\r\n          </div>\r\n        )}\r\n        \r\n        {/* Language tag */}\r\n        {movie.language && (\r\n          <div className=\"absolute top-2 right-2 bg-yellow-600 text-white text-xs font-medium px-2 py-1 rounded z-20\">\r\n            {movie.language}\r\n          </div>\r\n        )}\r\n        \r\n        {/* IMDb rating */}\r\n        {movie.rating > 0 && (\r\n          <div className=\"absolute bottom-2 right-2 bg-black/80 text-white text-xs font-bold px-2 py-1 rounded flex items-center z-20\">\r\n            <FiStar className={`mr-1 ${getRatingColor(movie.rating)}`} />\r\n            <span>{movie.rating.toFixed(1)}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      {/* Card info */}\r\n      <div className=\"p-3 flex flex-col flex-grow\">\r\n        <Link to={`/movie/${movie.slug}`} className=\"block\">\r\n          <h3 className=\"font-bold text-gray-900 dark:text-white text-sm line-clamp-1 group-hover:text-vegagreen transition-colors duration-200\">\r\n            {movie.title}\r\n          </h3>\r\n        </Link>\r\n        \r\n        <div className=\"flex items-center justify-between mt-auto pt-2 text-xs text-gray-600 dark:text-gray-400 border-t border-gray-100 dark:border-gray-700\">\r\n          <div className=\"flex items-center\">\r\n            <FiCalendar className=\"mr-1\" />\r\n            <span>{new Date(movie.releaseDate).getFullYear()}</span>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center\">\r\n            {movie.isSeries ? (\r\n              <div className=\"flex items-center text-blue-600 dark:text-blue-400\">\r\n                <FiVideo className=\"mr-1\" />\r\n                <span>Series</span>\r\n              </div>\r\n            ) : (\r\n              <div className=\"flex items-center\">\r\n                <FiClock className=\"mr-1\" />\r\n                <span>{movie.duration || 'N/A'}</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard; ","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Slider from 'react-slick';\r\n\r\n// Components\r\nimport HeroCarousel from '../components/HeroCarousel';\r\nimport MovieCard from '../components/MovieCard';\r\nimport { FiDownload, FiLoader, FiChevronRight, FiArrowRight, FiFilm, FiTrendingUp, FiClock, FiAward, FiStar } from 'react-icons/fi';\r\n\r\n// Featured this week section\r\nconst FeaturedThisWeek = ({ movie }) => {\r\n  if (!movie) return null;\r\n  \r\n  return (\r\n    <div className=\"bg-gradient-to-r from-gray-900 to-vegadark rounded-xl overflow-hidden shadow-lg mb-8\">\r\n      <div className=\"flex flex-col md:flex-row\">\r\n        <div className=\"md:w-1/3 lg:w-1/4\">\r\n          <img \r\n            src={movie.poster || \"https://via.placeholder.com/300x450?text=Movie+Poster\"} \r\n            alt={movie.title} \r\n            className=\"w-full h-full object-cover object-center\"\r\n          />\r\n        </div>\r\n        <div className=\"p-6 md:w-2/3 lg:w-3/4 flex flex-col justify-center\">\r\n          <div className=\"flex items-center mb-2\">\r\n            <span className=\"bg-vegagreen text-white text-xs font-bold px-2 py-1 rounded mr-2\">\r\n              FEATURED\r\n            </span>\r\n            {movie.quality && (\r\n              <span className={`quality-badge quality-badge-${movie.quality.toLowerCase()} mr-2`}>\r\n                {movie.quality}\r\n              </span>\r\n            )}\r\n          </div>\r\n          <h2 className=\"text-2xl md:text-3xl font-bold text-white mb-2\">{movie.title}</h2>\r\n          <div className=\"flex items-center text-gray-300 mb-4\">\r\n            <span className=\"flex items-center mr-4\">\r\n              <FiStar className=\"text-yellow-500 mr-1\" />\r\n              {movie.rating || \"N/A\"}\r\n            </span>\r\n            <span className=\"mr-4\">{new Date(movie.releaseDate).getFullYear()}</span>\r\n            {movie.genres && movie.genres.length > 0 && (\r\n              <span>{movie.genres.slice(0, 2).join(\", \")}</span>\r\n            )}\r\n          </div>\r\n          <p className=\"text-gray-300 mb-6 line-clamp-3\">{movie.description}</p>\r\n          <Link \r\n            to={`/movie/${movie.slug}`} \r\n            className=\"self-start btn-primary\"\r\n          >\r\n            View Details\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DownloadCTA = () => (\r\n  <div className=\"bg-gradient-vega text-white p-4 md:p-6 rounded-lg shadow-lg mb-8\">\r\n    <div className=\"flex flex-col md:flex-row items-center justify-between\">\r\n      <div className=\"mb-4 md:mb-0\">\r\n        <h3 className=\"text-xl md:text-2xl font-bold mb-2\">Download Your Favorite Movies!</h3>\r\n        <p className=\"opacity-90\">Get unlimited access to the latest releases in HD quality.</p>\r\n      </div>\r\n      <Link \r\n        to=\"/trending\" \r\n        className=\"bg-white text-vegagreen px-6 py-3 rounded-lg font-semibold flex items-center hover:bg-gray-100 transition-colors\"\r\n      >\r\n        <FiDownload className=\"mr-2\" /> Browse Movies\r\n      </Link>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst SectionHeader = ({ title, link, icon }) => (\r\n  <div className=\"flex justify-between items-center mb-6\">\r\n    <h2 className=\"text-xl md:text-2xl font-bold flex items-center\">\r\n      {icon}\r\n      <span className=\"ml-2\">{title}</span>\r\n    </h2>\r\n    {link && (\r\n      <Link to={link} className=\"text-vegagreen flex items-center hover:underline\">\r\n        View All <FiChevronRight className=\"ml-1\" />\r\n      </Link>\r\n    )}\r\n  </div>\r\n);\r\n\r\nconst Home = ({ darkMode }) => {\r\n  // State for different movie sections\r\n  const [featuredMovies, setFeaturedMovies] = useState([]);\r\n  const [trendingMovies, setTrendingMovies] = useState([]);\r\n  const [latestMovies, setLatestMovies] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [featuredThisWeek, setFeaturedThisWeek] = useState(null);\r\n\r\n  // Slider settings\r\n  const sliderSettings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    autoplaySpeed: 4000,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1200,\r\n        settings: {\r\n          slidesToShow: 5,\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 4,\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 768,\r\n        settings: {\r\n          slidesToShow: 3,\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 640,\r\n        settings: {\r\n          slidesToShow: 2,\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchHomeData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // Use relative or GitHub Pages compatible URLs when deployed\r\n        // This approach handles both local development and GitHub Pages deployment\r\n        const isGitHubPages = window.location.hostname.includes('github.io');\r\n        const API_BASE_URL = isGitHubPages \r\n          ? 'https://code-sumba.github.io/movieflix/api'  // GitHub Pages path\r\n          : 'http://localhost:5000/api';                  // Local development path\r\n        \r\n        const featuredUrl = `${API_BASE_URL}/movies/featured`;\r\n        const trendingUrl = `${API_BASE_URL}/movies/trending`;\r\n        const latestUrl = `${API_BASE_URL}/movies/latest`;\r\n        const categoriesUrl = `${API_BASE_URL}/movies/categories`;\r\n        \r\n        // On GitHub Pages, we'll need to fall back to sample data since there's no real API\r\n        if (isGitHubPages) {\r\n          console.log('Running on GitHub Pages, using sample data');\r\n          setSampleData();\r\n          setLoading(false);\r\n          return;\r\n        }\r\n        \r\n        // Continue with API calls for local development\r\n        const [featuredRes, trendingRes, latestRes, categoriesRes] = await Promise.all([\r\n          axios.get(featuredUrl),\r\n          axios.get(trendingUrl),\r\n          axios.get(latestUrl),\r\n          axios.get(categoriesUrl)\r\n        ]);\r\n        \r\n        // Update state with fetched data\r\n        if (featuredRes.data.success) setFeaturedMovies(featuredRes.data.movies);\r\n        if (trendingRes.data.success) setTrendingMovies(trendingRes.data.movies);\r\n        if (latestRes.data.success) setLatestMovies(latestRes.data.movies);\r\n        if (categoriesRes.data.success) {\r\n          setCategories(categoriesRes.data.categories);\r\n        }\r\n        \r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching home data:', err);\r\n        setError('Failed to load movies. Please try again later.');\r\n        setLoading(false);\r\n        \r\n        // Set sample data for demonstration if API fails\r\n        setSampleData();\r\n      }\r\n    };\r\n    \r\n    fetchHomeData();\r\n  }, []);\r\n  \r\n  // Fallback sample data for demonstration\r\n  const setSampleData = () => {\r\n    // Sample featured movies\r\n    const featured = [\r\n      {\r\n        title: 'The Dark Knight',\r\n        slug: 'the-dark-knight',\r\n        description: 'When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, Batman must accept one of the greatest psychological and physical tests of his ability to fight injustice.',\r\n        poster: 'https://via.placeholder.com/300x450?text=Dark+Knight',\r\n        backdrop: 'https://via.placeholder.com/1920x1080?text=Dark+Knight+Backdrop',\r\n        releaseDate: '2008-07-18',\r\n        rating: 9.0,\r\n        genres: ['Action', 'Crime', 'Drama'],\r\n        language: 'English',\r\n        quality: 'HD'\r\n      },\r\n      {\r\n        title: 'Inception',\r\n        slug: 'inception',\r\n        description: 'A thief who steals corporate secrets through the use of dream-sharing technology is given the inverse task of planting an idea into the mind of a C.E.O.',\r\n        poster: 'https://via.placeholder.com/300x450?text=Inception',\r\n        backdrop: 'https://via.placeholder.com/1920x1080?text=Inception+Backdrop',\r\n        releaseDate: '2010-07-16',\r\n        rating: 8.8,\r\n        genres: ['Action', 'Adventure', 'Sci-Fi'],\r\n        language: 'English',\r\n        quality: '1080p'\r\n      }\r\n    ];\r\n    \r\n    setFeaturedMovies(featured);\r\n    // Set featured this week movie\r\n    setFeaturedThisWeek(featured[1]);\r\n    \r\n    // Sample trending movies\r\n    setTrendingMovies([\r\n      {\r\n        title: 'Dune',\r\n        slug: 'dune',\r\n        poster: 'https://via.placeholder.com/300x450?text=Dune',\r\n        releaseDate: '2021-10-22',\r\n        rating: 8.1,\r\n        genres: ['Action', 'Adventure', 'Drama'],\r\n        language: 'English',\r\n        quality: '4K'\r\n      },\r\n      {\r\n        title: 'No Time to Die',\r\n        slug: 'no-time-to-die',\r\n        poster: 'https://via.placeholder.com/300x450?text=No+Time+To+Die',\r\n        releaseDate: '2021-10-08',\r\n        rating: 7.4,\r\n        genres: ['Action', 'Adventure', 'Thriller'],\r\n        language: 'English',\r\n        quality: 'HD'\r\n      },\r\n      {\r\n        title: 'Shang-Chi',\r\n        slug: 'shang-chi',\r\n        poster: 'https://via.placeholder.com/300x450?text=Shang+Chi',\r\n        releaseDate: '2021-09-03',\r\n        rating: 7.5,\r\n        genres: ['Action', 'Adventure', 'Fantasy'],\r\n        language: 'English',\r\n        quality: 'HD'\r\n      },\r\n      {\r\n        title: 'The French Dispatch',\r\n        slug: 'the-french-dispatch',\r\n        poster: 'https://via.placeholder.com/300x450?text=French+Dispatch',\r\n        releaseDate: '2021-10-22',\r\n        rating: 7.3,\r\n        genres: ['Comedy', 'Drama', 'Romance'],\r\n        language: 'English',\r\n        quality: '1080p'\r\n      },\r\n      {\r\n        title: 'Eternals',\r\n        slug: 'eternals',\r\n        poster: 'https://via.placeholder.com/300x450?text=Eternals',\r\n        releaseDate: '2021-11-05',\r\n        rating: 6.8,\r\n        genres: ['Action', 'Adventure', 'Fantasy'],\r\n        language: 'English',\r\n        quality: 'HD'\r\n      },\r\n      {\r\n        title: 'Venom: Let There Be Carnage',\r\n        slug: 'venom-let-there-be-carnage',\r\n        poster: 'https://via.placeholder.com/300x450?text=Venom',\r\n        releaseDate: '2021-10-01',\r\n        rating: 6.3,\r\n        genres: ['Action', 'Adventure', 'Sci-Fi'],\r\n        language: 'English',\r\n        quality: '720p'\r\n      }\r\n    ]);\r\n    \r\n    // Sample latest movies\r\n    setLatestMovies([\r\n      {\r\n        title: 'Eternals',\r\n        slug: 'eternals',\r\n        poster: 'https://via.placeholder.com/300x450?text=Eternals',\r\n        releaseDate: '2021-11-05',\r\n        rating: 6.8,\r\n        genres: ['Action', 'Adventure', 'Fantasy'],\r\n        language: 'English',\r\n        quality: '1080p'\r\n      },\r\n      {\r\n        title: 'Venom: Let There Be Carnage',\r\n        slug: 'venom-let-there-be-carnage',\r\n        poster: 'https://via.placeholder.com/300x450?text=Venom',\r\n        releaseDate: '2021-10-01',\r\n        rating: 6.3,\r\n        genres: ['Action', 'Adventure', 'Sci-Fi'],\r\n        language: 'English',\r\n        quality: 'HD'\r\n      },\r\n      {\r\n        title: 'Spencer',\r\n        slug: 'spencer',\r\n        poster: 'https://via.placeholder.com/300x450?text=Spencer',\r\n        releaseDate: '2021-11-05',\r\n        rating: 6.9,\r\n        genres: ['Biography', 'Drama'],\r\n        language: 'English',\r\n        quality: '720p'\r\n      },\r\n      {\r\n        title: 'Last Night in Soho',\r\n        slug: 'last-night-in-soho',\r\n        poster: 'https://via.placeholder.com/300x450?text=Soho',\r\n        releaseDate: '2021-10-29',\r\n        rating: 7.2,\r\n        genres: ['Drama', 'Horror', 'Mystery'],\r\n        language: 'English',\r\n        quality: '1080p'\r\n      }\r\n    ]);\r\n    \r\n    // Sample categories\r\n    setCategories(['Bollywood', 'Hollywood', 'South Indian', 'Dual Audio', 'Web Series', 'TV Shows', 'Netflix', 'Amazon Prime']);\r\n  };\r\n  \r\n  // Loading state\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <FiLoader className=\"animate-spin h-8 w-8 text-vegagreen\" />\r\n        <span className=\"ml-2 text-xl\">Loading amazing movies...</span>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // Error state\r\n  if (error && !featuredMovies.length && !trendingMovies.length && !latestMovies.length) {\r\n    return (\r\n      <div className=\"text-center py-20\">\r\n        <h2 className=\"text-2xl font-bold text-red-600 mb-4\">Oops! Something went wrong</h2>\r\n        <p className=\"mb-6\">{error}</p>\r\n        <button \r\n          onClick={() => window.location.reload()} \r\n          className=\"bg-vegagreen text-white py-2 px-6 rounded-lg hover:bg-green-700 transition\"\r\n        >\r\n          Try Again\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`pt-16 ${darkMode ? 'bg-vegadark' : 'bg-gray-100'}`}> {/* pt-16 to account for fixed navbar */}\r\n      {/* Hero carousel */}\r\n      <HeroCarousel featuredMovies={featuredMovies} />\r\n      \r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {/* Featured This Week Section */}\r\n        {featuredThisWeek && (\r\n          <section className=\"mb-8\">\r\n            <SectionHeader \r\n              title=\"Featured This Week\" \r\n              icon={<FiAward className=\"text-vegagreen\" size={24} />} \r\n            />\r\n            <FeaturedThisWeek movie={featuredThisWeek} />\r\n          </section>\r\n        )}\r\n        \r\n        {/* Download CTA */}\r\n        <DownloadCTA />\r\n        \r\n        {/* Trending Movies Section */}\r\n        <section className=\"mb-12\">\r\n          <SectionHeader \r\n            title=\"Trending Movies\" \r\n            link=\"/trending\" \r\n            icon={<FiTrendingUp className=\"text-vegagreen\" size={24} />} \r\n          />\r\n          \r\n          <Slider {...sliderSettings}>\r\n            {trendingMovies.map((movie) => (\r\n              <div key={movie.slug} className=\"px-2\">\r\n                <MovieCard movie={movie} />\r\n              </div>\r\n            ))}\r\n          </Slider>\r\n        </section>\r\n        \r\n        {/* Latest Movies Section */}\r\n        <section className=\"mb-12\">\r\n          <SectionHeader \r\n            title=\"Latest Releases\" \r\n            link=\"/latest\" \r\n            icon={<FiClock className=\"text-vegagreen\" size={24} />} \r\n          />\r\n          \r\n          <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 gap-4 md:gap-6\">\r\n            {latestMovies.slice(0, 12).map((movie) => (\r\n              <MovieCard key={movie.slug} movie={movie} />\r\n            ))}\r\n          </div>\r\n        </section>\r\n        \r\n        {/* Categories Section */}\r\n        <section>\r\n          <SectionHeader \r\n            title=\"Browse by Category\" \r\n            icon={<FiFilm className=\"text-vegagreen\" size={24} />} \r\n          />\r\n          \r\n          <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-4 gap-4\">\r\n            {categories.map((category) => (\r\n              <Link \r\n                key={category}\r\n                to={`/category/${category.toLowerCase().replace(/\\s+/g, '-')}`}\r\n                className=\"bg-white dark:bg-gray-800 hover:bg-vegagreen hover:text-white dark:hover:bg-vegagreen shadow-md rounded-lg p-5 text-center transition-colors flex items-center justify-between\"\r\n              >\r\n                <h3 className=\"font-medium text-lg\">{category}</h3>\r\n                <FiArrowRight size={18} />\r\n              </Link>\r\n            ))}\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home; "],"names":["_ref","featuredMovies","currentIndex","setCurrentIndex","useState","isAutoPlaying","setIsAutoPlaying","useEffect","interval","length","setInterval","prevIndex","clearInterval","handleManualChange","index","setTimeout","_jsx","className","children","_jsxs","currentMovie","src","backdrop","poster","alt","title","quality","rating","FiStar","toFixed","FiCalendar","Date","releaseDate","getFullYear","language","FiGlobe","description","trailerUrl","href","target","rel","FiPlay","Link","to","slug","FiInfo","FiDownload","onClick","goToPrevious","newIndex","FiChevronLeft","goToNext","FiChevronRight","map","_","movie","loading","onError","e","onerror","size","isSeries","FiVideo","FiClock","duration","FeaturedThisWeek","toLowerCase","genres","slice","join","DownloadCTA","SectionHeader","_ref2","link","icon","_ref3","darkMode","setFeaturedMovies","trendingMovies","setTrendingMovies","latestMovies","setLatestMovies","categories","setCategories","setLoading","error","setError","featuredThisWeek","setFeaturedThisWeek","async","isGitHubPages","window","location","hostname","includes","API_BASE_URL","featuredUrl","trendingUrl","latestUrl","categoriesUrl","console","log","setSampleData","featuredRes","trendingRes","latestRes","categoriesRes","Promise","all","axios","get","data","success","movies","err","fetchHomeData","featured","FiLoader","HeroCarousel","FiAward","FiTrendingUp","Slider","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","responsive","breakpoint","settings","MovieCard","FiFilm","category","replace","FiArrowRight","reload"],"sourceRoot":""}