{"version":3,"file":"static/js/306.6c99f5c2.chunk.js","mappings":"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","sources":["admin/AdminMovies.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AdminMovies = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [deleteId, setDeleteId] = useState(null);\r\n  const [showConfirmDialog, setShowConfirmDialog] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // In a real app, this would be an API call\r\n        // const response = await fetch('/api/admin/movies', {\r\n        //   headers: {\r\n        //     'Authorization': `Bearer ${token}`\r\n        //   }\r\n        // });\r\n        // const data = await response.json();\r\n        \r\n        // Placeholder data\r\n        const placeholderMovies = [\r\n          { id: 1, title: 'The Shawshank Redemption', year: 1994, poster: '/placeholder.jpg', status: 'active' },\r\n          { id: 2, title: 'The Godfather', year: 1972, poster: '/placeholder.jpg', status: 'active' },\r\n          { id: 3, title: 'The Dark Knight', year: 2008, poster: '/placeholder.jpg', status: 'active' },\r\n          { id: 4, title: 'The Godfather Part II', year: 1974, poster: '/placeholder.jpg', status: 'inactive' },\r\n          { id: 5, title: 'Pulp Fiction', year: 1994, poster: '/placeholder.jpg', status: 'active' },\r\n        ];\r\n        \r\n        setTimeout(() => {\r\n          setMovies(placeholderMovies);\r\n          setLoading(false);\r\n        }, 500);\r\n        \r\n      } catch (error) {\r\n        console.error('Error fetching movies:', error);\r\n        setError('Failed to load movies. Please try again.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchMovies();\r\n  }, []);\r\n  \r\n  const handleDeleteClick = (id) => {\r\n    setDeleteId(id);\r\n    setShowConfirmDialog(true);\r\n  };\r\n  \r\n  const confirmDelete = async () => {\r\n    try {\r\n      // In a real app, this would be an API call\r\n      // await fetch(`/api/admin/movies/${deleteId}`, {\r\n      //   method: 'DELETE',\r\n      //   headers: {\r\n      //     'Authorization': `Bearer ${token}`\r\n      //   }\r\n      // });\r\n      \r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      \r\n      // Update UI\r\n      setMovies(prevMovies => prevMovies.filter(movie => movie.id !== deleteId));\r\n      \r\n    } catch (error) {\r\n      console.error('Error deleting movie:', error);\r\n      setError('Failed to delete movie. Please try again.');\r\n    } finally {\r\n      setShowConfirmDialog(false);\r\n      setDeleteId(null);\r\n    }\r\n  };\r\n  \r\n  const cancelDelete = () => {\r\n    setShowConfirmDialog(false);\r\n    setDeleteId(null);\r\n  };\r\n  \r\n  if (loading) {\r\n    return (\r\n      <div className=\"container mt-5\">\r\n        <h2>Loading movies...</h2>\r\n        <div className=\"spinner-border\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  if (error) {\r\n    return (\r\n      <div className=\"container mt-5\">\r\n        <div className=\"alert alert-danger\">\r\n          {error}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <h2>Manage Movies</h2>\r\n        <Link to=\"/admin/movies/add\" className=\"btn btn-primary\">\r\n          Add New Movie\r\n        </Link>\r\n      </div>\r\n      \r\n      {movies.length === 0 ? (\r\n        <p>No movies found. Add some movies to get started.</p>\r\n      ) : (\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-striped table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Poster</th>\r\n                <th>Title</th>\r\n                <th>Year</th>\r\n                <th>Status</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {movies.map((movie) => (\r\n                <tr key={movie.id}>\r\n                  <td>{movie.id}</td>\r\n                  <td>\r\n                    <img\r\n                      src={movie.poster}\r\n                      alt={movie.title}\r\n                      style={{ width: '50px', height: '70px', objectFit: 'cover' }}\r\n                      onError={(e) => {\r\n                        e.target.src = '/placeholder.jpg';\r\n                      }}\r\n                    />\r\n                  </td>\r\n                  <td>{movie.title}</td>\r\n                  <td>{movie.year}</td>\r\n                  <td>\r\n                    <span className={`badge ${movie.status === 'active' ? 'bg-success' : 'bg-secondary'}`}>\r\n                      {movie.status}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                      <Link to={`/admin/movies/edit/${movie.id}`} className=\"btn btn-sm btn-primary\">\r\n                        Edit\r\n                      </Link>\r\n                      <button\r\n                        onClick={() => handleDeleteClick(movie.id)}\r\n                        className=\"btn btn-sm btn-danger\"\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Confirmation Dialog */}\r\n      {showConfirmDialog && (\r\n        <div className=\"modal d-block\" tabIndex=\"-1\" style={{ backgroundColor: 'rgba(0,0,0,0.5)' }}>\r\n          <div className=\"modal-dialog\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Confirm Delete</h5>\r\n                <button type=\"button\" className=\"btn-close\" onClick={cancelDelete}></button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <p>Are you sure you want to delete this movie? This action cannot be undone.</p>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={cancelDelete}>Cancel</button>\r\n                <button type=\"button\" className=\"btn btn-danger\" onClick={confirmDelete}>Delete</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminMovies; "],"names":["AdminMovies","movies","setMovies","useState","loading","setLoading","error","setError","deleteId","setDeleteId","showConfirmDialog","setShowConfirmDialog","useEffect","async","placeholderMovies","id","title","year","poster","status","setTimeout","console","fetchMovies","cancelDelete","_jsxs","className","children","_jsx","role","Link","to","length","map","movie","src","alt","style","width","height","objectFit","onError","e","target","onClick","handleDeleteClick","tabIndex","backgroundColor","type","Promise","resolve","prevMovies","filter"],"sourceRoot":""}