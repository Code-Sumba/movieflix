{"version":3,"file":"static/js/380.f27c2523.chunk.js","mappings":"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","sources":["pages/CategoryPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\n\r\nconst CategoryPage = () => {\r\n  const { categoryId } = useParams();\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchMoviesByCategory = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      try {\r\n        // In a real app, this would be an API call\r\n        // const response = await fetch(`/api/movies/category/${categoryId}?page=${page}`);\r\n        // const data = await response.json();\r\n        \r\n        // Simulate API delay\r\n        await new Promise(resolve => setTimeout(resolve, 800));\r\n        \r\n        // Mock data based on category\r\n        const mockMovies = [];\r\n        const totalMockMovies = 23; // Total count for pagination\r\n        \r\n        // Generate mock movies for this category\r\n        for (let i = 1; i <= 8; i++) {\r\n          const id = (page - 1) * 8 + i;\r\n          if (id <= totalMockMovies) {\r\n            mockMovies.push({\r\n              id,\r\n              title: `${categoryId} Movie ${id}`,\r\n              posterUrl: '/placeholder.jpg',\r\n              year: 2023 - Math.floor(Math.random() * 10),\r\n              rating: (Math.random() * 2 + 7).toFixed(1),\r\n              category: categoryId\r\n            });\r\n          }\r\n        }\r\n        \r\n        setMovies(mockMovies);\r\n        setTotalPages(Math.ceil(totalMockMovies / 8));\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching movies by category:', error);\r\n        setError('Failed to load movies. Please try again later.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchMoviesByCategory();\r\n    // Scroll to top when category or page changes\r\n    window.scrollTo(0, 0);\r\n  }, [categoryId, page]);\r\n\r\n  const handlePageChange = (newPage) => {\r\n    if (newPage >= 1 && newPage <= totalPages) {\r\n      setPage(newPage);\r\n    }\r\n  };\r\n\r\n  if (loading && page === 1) {\r\n    return (\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <h1 className=\"text-3xl font-bold mb-6 capitalize\">{categoryId} Movies</h1>\r\n        <div className=\"animate-pulse\">\r\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\r\n            {[1, 2, 3, 4, 5, 6, 7, 8].map(i => (\r\n              <div key={i} className=\"bg-gray-300 h-64 rounded\"></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        <h1 className=\"text-3xl font-bold mb-6 capitalize\">{categoryId} Movies</h1>\r\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\r\n          {error}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <h1 className=\"text-3xl font-bold mb-6 capitalize\">{categoryId} Movies</h1>\r\n      \r\n      {movies.length === 0 ? (\r\n        <div className=\"text-center py-8\">\r\n          <p className=\"text-gray-600\">No movies found in this category.</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\r\n            {movies.map(movie => (\r\n              <div key={movie.id} className=\"movie-card\">\r\n                <Link to={`/movie/${movie.id}`}>\r\n                  <div className=\"bg-gray-200 rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition-shadow\">\r\n                    <img \r\n                      src={movie.posterUrl} \r\n                      alt={movie.title}\r\n                      className=\"w-full h-64 object-cover\"\r\n                      onError={(e) => {\r\n                        e.target.src = '/placeholder.jpg';\r\n                      }}\r\n                    />\r\n                    <div className=\"p-4\">\r\n                      <h3 className=\"text-lg font-semibold\">{movie.title}</h3>\r\n                      <div className=\"flex justify-between mt-2\">\r\n                        <span className=\"text-gray-600\">{movie.year}</span>\r\n                        <span className=\"text-yellow-500\">â˜… {movie.rating}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          {/* Pagination */}\r\n          {totalPages > 1 && (\r\n            <div className=\"flex justify-center mt-8\">\r\n              <nav className=\"flex items-center\">\r\n                <button\r\n                  onClick={() => handlePageChange(page - 1)}\r\n                  disabled={page === 1}\r\n                  className={`mx-1 px-3 py-1 rounded ${\r\n                    page === 1\r\n                      ? 'bg-gray-200 text-gray-500 cursor-not-allowed'\r\n                      : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n                  }`}\r\n                >\r\n                  Previous\r\n                </button>\r\n                \r\n                {[...Array(totalPages)].map((_, index) => (\r\n                  <button\r\n                    key={index + 1}\r\n                    onClick={() => handlePageChange(index + 1)}\r\n                    className={`mx-1 px-3 py-1 rounded ${\r\n                      page === index + 1\r\n                        ? 'bg-blue-600 text-white'\r\n                        : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n                    }`}\r\n                  >\r\n                    {index + 1}\r\n                  </button>\r\n                ))}\r\n                \r\n                <button\r\n                  onClick={() => handlePageChange(page + 1)}\r\n                  disabled={page === totalPages}\r\n                  className={`mx-1 px-3 py-1 rounded ${\r\n                    page === totalPages\r\n                      ? 'bg-gray-200 text-gray-500 cursor-not-allowed'\r\n                      : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n                  }`}\r\n                >\r\n                  Next\r\n                </button>\r\n              </nav>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryPage; "],"names":["CategoryPage","categoryId","useParams","movies","setMovies","useState","loading","setLoading","error","setError","page","setPage","totalPages","setTotalPages","useEffect","async","Promise","resolve","setTimeout","mockMovies","totalMockMovies","i","id","push","title","posterUrl","year","Math","floor","random","rating","toFixed","category","ceil","console","fetchMoviesByCategory","window","scrollTo","handlePageChange","newPage","_jsxs","className","children","_jsx","map","length","_Fragment","movie","Link","to","src","alt","onError","e","target","onClick","disabled","Array","_","index"],"sourceRoot":""}